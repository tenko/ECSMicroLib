MODULE STM32F4 IN Micro;

	(*
		Alexander Shiryaev, 2015.02, 2015.07, 2016.10, 2017.10, 2018.05, 2021.08
        Modified by Tenko for use with ECS
        
		RM0368, Reference manual,
			STM32F401x{B,C,D,E}

		RM0090, Reference manual,
			STM32F405xx/07xx
			[ STM32F415xx/17xx ]

		RM0383, Reference manual,
			STM32F411xC/E

		RM0390, Reference manual,
			STM32F446xx
	*)
    IMPORT SYSTEM;

    TYPE ADDRESS = SYSTEM.ADDRESS;

	CONST
		(* memory map *)
			BootStart* = ADDRESS(0H);
			FlashStart* = ADDRESS(8000000H);
				Sector0* =  ADDRESS(FlashStart + 0);
				Sector1* =  ADDRESS(FlashStart + 4000H);
				Sector2* =  ADDRESS(FlashStart + 8000H);
				Sector3* =  ADDRESS(FlashStart + 0C000H);
				Sector4* =  ADDRESS(FlashStart + 10000H);
				Sector5* =  ADDRESS(FlashStart + 20000H);
				Sector6* =  ADDRESS(FlashStart + 40000H);
				Sector7* =  ADDRESS(FlashStart + 60000H);
				Sector8* =  ADDRESS(FlashStart + 80000H);
				Sector9* =  ADDRESS(FlashStart + 0A0000H);
				Sector10* = ADDRESS(FlashStart + 0C0000H);
				Sector11* = ADDRESS(FlashStart + 0E0000H);
			SystemMemory* = ADDRESS(1FFF0000H); (* 30 KiB *)
			OTPArea* = ADDRESS(1FFF7800H); (* 528 B *)
			(* device electronic signature *)
				(* Unique device ID register (96 bits) *)
					UID* = ADDRESS(1FFF7A10H); (* 12 B *)
						UID0* = ADDRESS(UID + 0);
						UID1* = ADDRESS(UID0 + 4);
						UID2* =ADDRESS( UID1 + 4);
				(* Flash size, in KiB *)
					FlashSizeKiBAdr* = ADDRESS(1FFF7A22H); (* 2 B *)
			OptionBytes* = ADDRESS(1FFFC000H); (* 16 B *)
			SRAMStart* = ADDRESS(20000000H);
			(* APB1 *)
				TIM2* = ADDRESS(40000000H);
					TIM2CR1*    = ADDRESS(TIM2 + 0);
					TIM2CR2*    = ADDRESS(TIM2 + 4);
					TIM2SMCR*   = ADDRESS(TIM2 + 8);
					TIM2DIER*   = ADDRESS(TIM2 + 0CH);
					TIM2SR*     = ADDRESS(TIM2 + 10H);
					TIM2EGR*    = ADDRESS(TIM2 + 14H);
					TIM2CCMR1*  = ADDRESS(TIM2 + 18H);
					TIM2CCMR2*  = ADDRESS(TIM2 + 1CH);
					TIM2CCER*   = ADDRESS(TIM2 + 20H);
					TIM2CNT*    = ADDRESS(TIM2 + 24H);
					TIM2PSC*    = ADDRESS(TIM2 + 28H);
					TIM2ARR*    = ADDRESS(TIM2 + 2CH);
					TIM2CCR1*   = ADDRESS(TIM2 + 34H);
					TIM2CCR2*   = ADDRESS(TIM2 + 38H);
					TIM2CCR3*   = ADDRESS(TIM2 + 3CH);
					TIM2CCR4*   = ADDRESS(TIM2 + 40H);
					TIM2DCR*    = ADDRESS(TIM2 + 48H);
					TIM2DMAR*   = ADDRESS(TIM2 + 4CH);
					TIM2OR*     = ADDRESS(TIM2 + 50H);
				TIM3* = ADDRESS(40000400H);
					TIM3CR1*    = ADDRESS(TIM3 + 0);
					TIM3CR2*    = ADDRESS(TIM3 + 4);
					TIM3SMCR*   = ADDRESS(TIM3 + 8);
					TIM3DIER*   = ADDRESS(TIM3 + 0CH);
					TIM3SR*     = ADDRESS(TIM3 + 10H);
					TIM3EGR*    = ADDRESS(TIM3 + 14H);
					TIM3CCMR1*  = ADDRESS(TIM3 + 18H);
					TIM3CCMR2*  = ADDRESS(TIM3 + 1CH);
					TIM3CCER*   = ADDRESS(TIM3 + 20H);
					TIM3CNT*    = ADDRESS(TIM3 + 24H);
					TIM3PSC*    = ADDRESS(TIM3 + 28H);
					TIM3ARR*    = ADDRESS(TIM3 + 2CH);
					TIM3CCR1*   = ADDRESS(TIM3 + 34H);
					TIM3CCR2*   = ADDRESS(TIM3 + 38H);
					TIM3CCR3*   = ADDRESS(TIM3 + 3CH);
					TIM3CCR4*   = ADDRESS(TIM3 + 40H);
					TIM3DCR*    = ADDRESS(TIM3 + 48H);
					TIM3DMAR*   = ADDRESS(TIM3 + 4CH);
				TIM4* = ADDRESS(40000800H);
					TIM4CR1*    = ADDRESS(TIM4 + 0);
					TIM4CR2*    = ADDRESS(TIM4 + 4);
					TIM4SMCR*   = ADDRESS(TIM4 + 8);
					TIM4DIER*   = ADDRESS(TIM4 + 0CH);
					TIM4SR*     = ADDRESS(TIM4 + 10H);
					TIM4EGR*    = ADDRESS(TIM4 + 14H);
					TIM4CCMR1*  = ADDRESS(TIM4 + 18H);
					TIM4CCMR2*  = ADDRESS(TIM4 + 1CH);
					TIM4CCER*   = ADDRESS(TIM4 + 20H);
					TIM4CNT*    = ADDRESS(TIM4 + 24H);
					TIM4PSC*    = ADDRESS(TIM4 + 28H);
					TIM4ARR*    = ADDRESS(TIM4 + 2CH);
					TIM4CCR1*   = ADDRESS(TIM4 + 34H);
					TIM4CCR2*   = ADDRESS(TIM4 + 38H);
					TIM4CCR3*   = ADDRESS(TIM4 + 3CH);
					TIM4CCR4*   = ADDRESS(TIM4 + 40H);
					TIM4DCR*    = ADDRESS(TIM4 + 48H);
					TIM4DMAR*   = ADDRESS(TIM4 + 4CH);
				TIM5* = ADDRESS(40000C00H);
					TIM5CR1*    = ADDRESS(TIM5 + 0);
					TIM5CR2*    = ADDRESS(TIM5 + 4);
					TIM5SMCR*   = ADDRESS(TIM5 + 8);
					TIM5DIER*   = ADDRESS(TIM5 + 0CH);
					TIM5SR*     = ADDRESS(TIM5 + 10H);
					TIM5EGR*    = ADDRESS(TIM5 + 14H);
					TIM5CCMR1*  = ADDRESS(TIM5 + 18H);
					TIM5CCMR2*  = ADDRESS(TIM5 + 1CH);
					TIM5CCER*   = ADDRESS(TIM5 + 20H);
					TIM5CNT*    = ADDRESS(TIM5 + 24H);
					TIM5PSC*    = ADDRESS(TIM5 + 28H);
					TIM5ARR*    = ADDRESS(TIM5 + 2CH);
					TIM5CCR1*   = ADDRESS(TIM5 + 34H);
					TIM5CCR2*   = ADDRESS(TIM5 + 38H);
					TIM5CCR3*   = ADDRESS(TIM5 + 3CH);
					TIM5CCR4*   = ADDRESS(TIM5 + 40H);
					TIM5DCR*    = ADDRESS(TIM5 + 48H);
					TIM5DMAR*   = ADDRESS(TIM5 + 4CH);
					TIM5OR*     = ADDRESS(TIM5 + 50H);
				TIM6* = ADDRESS(40001000H);
					TIM6CR1*    = ADDRESS(TIM6 + 0);
					TIM6CR2*    = ADDRESS(TIM6 + 4);
					TIM6DIER*   = ADDRESS(TIM6 + 0CH);
					TIM6SR*     = ADDRESS(TIM6 + 10H);
					TIM6EGR*    = ADDRESS(TIM6 + 14H);
					TIM6CNT*    = ADDRESS(TIM6 + 24H);
					TIM6PSC*    = ADDRESS(TIM6 + 28H);
					TIM6ARR*    = ADDRESS(TIM6 + 2CH);
				TIM7* = ADDRESS(40001400H);
					TIM7CR1*    = ADDRESS(TIM7 + 0);
					TIM7CR2*    = ADDRESS(TIM7 + 4);
					TIM7DIER*   = ADDRESS(TIM7 + 0CH);
					TIM7SR*     = ADDRESS(TIM7 + 10H);
					TIM7EGR*    = ADDRESS(TIM7 + 14H);
					TIM7CNT*    = ADDRESS(TIM7 + 24H);
					TIM7PSC*    = ADDRESS(TIM7 + 28H);
					TIM7ARR*    = ADDRESS(TIM7 + 2CH);
				TIM12* = ADDRESS(40001800H);
					TIM12CR1*   = ADDRESS(TIM12 + 0);
					TIM12SMCR*  = ADDRESS(TIM12 + 8);
					TIM12DIER*  = ADDRESS(TIM12 + 0CH);
					TIM12SR*    = ADDRESS(TIM12 + 10H);
					TIM12EGR*   = ADDRESS(TIM12 + 14H);
					TIM12CCMR1* = ADDRESS(TIM12 + 18H);
					TIM12CCER*  = ADDRESS(TIM12 + 20H);
					TIM12CNT*   = ADDRESS(TIM12 + 24H);
					TIM12PSC*   = ADDRESS(TIM12 + 28H);
					TIM12ARR*   = ADDRESS(TIM12 + 2CH);
					TIM12CCR1*  = ADDRESS(TIM12 + 34H);
					TIM12CCR2*  = ADDRESS(TIM12 + 38H);
				TIM13* = ADDRESS(40001C00H);
					TIM13CR1*   = ADDRESS(TIM13 + 0);
					TIM13SMCR*  = ADDRESS(TIM13 + 8);
					TIM13DIER*  = ADDRESS(TIM13 + 0CH);
					TIM13SR*    = ADDRESS(TIM13 + 10H);
					TIM13EGR*   = ADDRESS(TIM13 + 14H);
					TIM13CCMR1* = ADDRESS(TIM13 + 18H);
					TIM13CCER*  = ADDRESS(TIM13 + 20H);
					TIM13CNT*   = ADDRESS(TIM13 + 24H);
					TIM13PSC*   = ADDRESS(TIM13 + 28H);
					TIM13ARR*   = ADDRESS(TIM13 + 2CH);
					TIM13CCR1*  = ADDRESS(TIM13 + 34H);
					TIM13OR*    = ADDRESS(TIM13 + 50H);
				TIM14* = ADDRESS(40002000H);
					TIM14CR1*   = ADDRESS(TIM14 + 0);
					TIM14SMCR*  = ADDRESS(TIM14 + 8);
					TIM14DIER*  = ADDRESS(TIM14 + 0CH);
					TIM14SR*    = ADDRESS(TIM14 + 10H);
					TIM14EGR*   = ADDRESS(TIM14 + 14H);
					TIM14CCMR1* = ADDRESS(TIM14 + 18H);
					TIM14CCER*  = ADDRESS(TIM14 + 20H);
					TIM14CNT*   = ADDRESS(TIM14 + 24H);
					TIM14PSC*   = ADDRESS(TIM14 + 28H);
					TIM14ARR*   = ADDRESS(TIM14 + 2CH);
					TIM14CCR1*  = ADDRESS(TIM14 + 34H);
					TIM14OR*    = ADDRESS(TIM14 + 50H);
				RTCBKPRegisters* = ADDRESS(40002800H);
				WWDG* = ADDRESS(40002C00H);
					WWDGCR*     = ADDRESS(WWDG + 0);
					WWDGCFR*    = ADDRESS(WWDG + 4);
					WWDGSR*     = ADDRESS(WWDG + 8);
				IWDG* = ADDRESS(40003000H);
					IWDGKR*     = ADDRESS(IWDG + 0);
					IWDGPR*     = ADDRESS(IWDG + 4);
					IWDGRLR*    = ADDRESS(IWDG + 8);
					IWDGSR*     = ADDRESS(IWDG + 0CH);
				I2S2ext* = ADDRESS(40003400H);
				SPI2* = ADDRESS(40003800H); I2S2* = SPI2;
					SPI2CR1*    = ADDRESS(SPI2 + 0);
					SPI2CR2*    = ADDRESS(SPI2 + 4);
					SPI2SR*     = ADDRESS(SPI2 + 8);
					SPI2DR*     = ADDRESS(SPI2 + 0CH);
					SPI2CRCPR*  = ADDRESS(SPI2 + 10H);
					SPI2RXCRCR* = ADDRESS(SPI2 + 14H);
					SPI2TXCRCR* = ADDRESS(SPI2 + 18H);
					SPI2I2SCFGR*= ADDRESS(SPI2 + 1CH);
					SPI2I2SPR*  = ADDRESS(SPI2 + 20H);
				SPI3* = ADDRESS(40003C00H); I2S3* = SPI3;
					SPI3CR1*    = ADDRESS(SPI3 + 0);
					SPI3CR2*    = ADDRESS(SPI3 + 4);
					SPI3SR*     = ADDRESS(SPI3 + 8);
					SPI3DR*     = ADDRESS(SPI3 + 0CH);
					SPI3CRCPR*  = ADDRESS(SPI3 + 10H);
					SPI3RXCRCR* = ADDRESS(SPI3 + 14H);
					SPI3TXCRCR* = ADDRESS(SPI3 + 18H);
					SPI3I2SCFGR*= ADDRESS(SPI3 + 1CH);
					SPI3I2SPR*  = ADDRESS(SPI3 + 20H);
				SPDIFRX* = ADDRESS(40004000H); I2S3ext* = ADDRESS(40004000H);
				USART2* = ADDRESS(40004400H);
					USART2SR*   = ADDRESS(USART2 + 0);
					USART2DR*   = ADDRESS(USART2 + 4);
					USART2BRR*  = ADDRESS(USART2 + 8);
					USART2CR1*  = ADDRESS(USART2 + 0CH);
					USART2CR2*  = ADDRESS(USART2 + 10H);
					USART2CR3*  = ADDRESS(USART2 + 14H);
					USART2GTPR* = ADDRESS(USART2 + 18H);
				USART3* = ADDRESS(40004800H);
					USART3SR*   = ADDRESS(USART3 + 0);
					USART3DR*   = ADDRESS(USART3 + 4);
					USART3BRR*  = ADDRESS(USART3 + 8);
					USART3CR1*  = ADDRESS(USART3 + 0CH);
					USART3CR2*  = ADDRESS(USART3 + 10H);
					USART3CR3*  = ADDRESS(USART3 + 14H);
					USART3GTPR* = ADDRESS(USART3 + 18H);
				UART4* = ADDRESS(40004C00H);
					USART4SR*   = ADDRESS(UART4 + 0);
					USART4DR*   = ADDRESS(UART4 + 4);
					USART4BRR*  = ADDRESS(UART4 + 8);
					USART4CR1*  = ADDRESS(UART4 + 0CH);
					USART4CR2*  = ADDRESS(UART4 + 10H);
					USART4CR3*  = ADDRESS(UART4 + 14H);
					USART4GTPR* = ADDRESS(UART4 + 18H);
				UART5* = ADDRESS(40005000H);
					USART5SR*   = ADDRESS(UART5 + 0);
					USART5DR*   = ADDRESS(UART5 + 4);
					USART5BRR*  = ADDRESS(UART5 + 8);
					USART5CR1*  = ADDRESS(UART5 + 0CH);
					USART5CR2*  = ADDRESS(UART5 + 10H);
					USART5CR3*  = ADDRESS(UART5 + 14H);
					USART5GTPR* = ADDRESS(UART5 + 18H);
				I2C1* = ADDRESS(40005400H);
					I2C1CR1*    = ADDRESS(I2C1 + 0);
					I2C1CR2*    = ADDRESS(I2C1 + 4);
					I2C1OAR1*   = ADDRESS(I2C1 + 8);
					I2C1OAR2*   = ADDRESS(I2C1 + 0CH);
					I2C1DR*     = ADDRESS(I2C1 + 10H);
					I2C1SR1*    = ADDRESS(I2C1 + 14H);
					I2C1SR2*    = ADDRESS(I2C1 + 18H);
					I2C1CCR*    = ADDRESS(I2C1 + 1CH);
					I2C1TRISE*  = ADDRESS(I2C1 + 20H);
					I2C1FLTR*   = ADDRESS(I2C1 + 24H);
				I2C2* = ADDRESS(40005800H);
					I2C2CR1*    = ADDRESS(I2C2 + 0);
					I2C2CR2*    = ADDRESS(I2C2 + 4);
					I2C2OAR1*   = ADDRESS(I2C2 + 8);
					I2C2OAR2*   = ADDRESS(I2C2 + 0CH);
					I2C2DR*     = ADDRESS(I2C2 + 10H);
					I2C2SR1*    = ADDRESS(I2C2 + 14H);
					I2C2SR2*    = ADDRESS(I2C2 + 18H);
					I2C2CCR*    = ADDRESS(I2C2 + 1CH);
					I2C2TRISE*  = ADDRESS(I2C2 + 20H);
					I2C2FLTR*   = ADDRESS(I2C2 + 24H);
				I2C3* = ADDRESS(40005C00H);
					I2C3CR1*    = (I2C3 + 0);
					I2C3CR2*    = (I2C3 + 4);
					I2C3OAR1*   = (I2C3 + 8);
					I2C3OAR2*   = (I2C3 + 0CH);
					I2C3DR*     = (I2C3 + 10H);
					I2C3SR1*    = (I2C3 + 14H);
					I2C3SR2*    = (I2C3 + 18H);
					I2C3CCR*    = (I2C3 + 1CH);
					I2C3TRISE*  = (I2C3 + 20H);
					I2C3FLTR*   = (I2C3 + 24H);
				CAN1* = ADDRESS(40006400H);
				CAN2* = ADDRESS(40006800H);
				HDMICEC* = ADDRESS(40006C00H);
				PWR* = ADDRESS(40007000H);
					PWRCR*  = ADDRESS(PWR + 0);
					PWRCSR* = ADDRESS(PWR + 4);
				DAC* = ADDRESS(40007400H);
					DACCR*      = ADDRESS(DAC + 0);
					DACSWTRIGR* = ADDRESS(DAC + 4);
					DACDHR12R1* = ADDRESS(DAC + 8);
					DACDHR12L1* = ADDRESS(DAC + 0CH);
					DACDHR8R1*  = ADDRESS(DAC + 10H);
					DACDHR12R2* = ADDRESS(DAC + 14H);
					DACDHR12L2* = ADDRESS(DAC + 18H);
					DACDHR8R2*  = ADDRESS(DAC + 1CH);
					DACDHR12RD* = ADDRESS(DAC + 20H);
					DACDHR12LD* = ADDRESS(DAC + 24H);
					DACDHR8RD*  = ADDRESS(DAC + 28H);
					DACDOR1*    = ADDRESS(DAC + 2CH);
					DACDOR2*    = ADDRESS(DAC + 30H);
					DACSR*      = ADDRESS(DAC + 34H);
				UART7* = ADDRESS(40007800H);
					USART7SR*   = ADDRESS(UART7 + 0);
					USART7DR*   = ADDRESS(UART7 + 4);
					USART7BRR*  = ADDRESS(UART7 + 8);
					USART7CR1*  = ADDRESS(UART7 + 0CH);
					USART7CR2*  = ADDRESS(UART7 + 10H);
					USART7CR3*  = ADDRESS(UART7 + 14H);
					USART7GTPR* = ADDRESS(UART7 + 18H);
				UART8* = ADDRESS(40007C00H);
					USART8SR*   = ADDRESS(UART8 + 0);
					USART8DR*   = ADDRESS(UART8 + 4);
					USART8BRR*  = ADDRESS(UART8 + 8);
					USART8CR1*  = ADDRESS(UART8 + 0CH);
					USART8CR2*  = ADDRESS(UART8 + 10H);
					USART8CR3*  = ADDRESS(UART8 + 14H);
					USART8GTPR* = ADDRESS(UART8 + 18H);
			(* APB2 *)
				TIM1* = ADDRESS(40010000H);
					TIM1CR1*    = ADDRESS(TIM1 + 0);
					TIM1CR2*    = ADDRESS(TIM1 + 4);
					TIM1SMCR*   = ADDRESS(TIM1 + 8);
					TIM1DIER*   = ADDRESS(TIM1 + 0CH);
					TIM1SR*     = ADDRESS(TIM1 + 10H);
					TIM1EGR*    = ADDRESS(TIM1 + 14H);
					TIM1CCMR1*  = ADDRESS(TIM1 + 18H);
					TIM1CCMR2*  = ADDRESS(TIM1 + 1CH);
					TIM1CCER*   = ADDRESS(TIM1 + 20H);
					TIM1CNT*    = ADDRESS(TIM1 + 24H);
					TIM1PSC*    = ADDRESS(TIM1 + 28H);
					TIM1ARR*    = ADDRESS(TIM1 + 2CH);
					TIM1RCR*    = ADDRESS(TIM1 + 30H);
					TIM1CCR1*   = ADDRESS(TIM1 + 34H);
					TIM1CCR2*   = ADDRESS(TIM1 + 38H);
					TIM1CCR3*   = ADDRESS(TIM1 + 3CH);
					TIM1CCR4*   = ADDRESS(TIM1 + 40H);
					TIM1BDTR*   = ADDRESS(TIM1 + 44H);
					TIM1DCR*    = ADDRESS(TIM1 + 48H);
					TIM1DMAR*   = ADDRESS(TIM1 + 4CH);
				TIM8* = ADDRESS(40010400H);
					TIM8CR1*    = ADDRESS(TIM8 + 0);
					TIM8CR2*    = ADDRESS(TIM8 + 4);
					TIM8SMCR*   = ADDRESS(TIM8 + 8);
					TIM8DIER*   = ADDRESS(TIM8 + 0CH);
					TIM8SR*     = ADDRESS(TIM8 + 10H);
					TIM8EGR*    = ADDRESS(TIM8 + 14H);
					TIM8CCMR1*  = ADDRESS(TIM8 + 18H);
					TIM8CCMR2*  = ADDRESS(TIM8 + 1CH);
					TIM8CCER*   = ADDRESS(TIM8 + 20H);
					TIM8CNT*    = ADDRESS(TIM8 + 24H);
					TIM8PSC*    = ADDRESS(TIM8 + 28H);
					TIM8ARR*    = ADDRESS(TIM8 + 2CH);
					TIM8RCR*    = ADDRESS(TIM8 + 30H);
					TIM8CCR1*   = ADDRESS(TIM8 + 34H);
					TIM8CCR2*   = ADDRESS(TIM8 + 38H);
					TIM8CCR3*   = ADDRESS(TIM8 + 3CH);
					TIM8CCR4*   = ADDRESS(TIM8 + 40H);
					TIM8BDTR*   = ADDRESS(TIM8 + 44H);
					TIM8DCR*    = ADDRESS(TIM8 + 48H);
					TIM8DMAR*   = ADDRESS(TIM8 + 4CH);
				USART1* = ADDRESS(40011000H);
					USART1SR*   = ADDRESS(USART1 + 0);
					USART1DR*   = ADDRESS(USART1 + 4);
					USART1BRR*  = ADDRESS(USART1 + 8);
					USART1CR1*  = ADDRESS(USART1 + 0CH);
					USART1CR2*  = ADDRESS(USART1 + 10H);
					USART1CR3*  = ADDRESS(USART1 + 14H);
					USART1GTPR* = ADDRESS(USART1 + 18H);
				USART6* = ADDRESS(40011400H);
					USART6SR*   = ADDRESS(USART6 + 0);
					USART6DR*   = ADDRESS(USART6 + 4);
					USART6BRR*  = ADDRESS(USART6 + 8);
					USART6CR1*  = ADDRESS(USART6 + 0CH);
					USART6CR2*  = ADDRESS(USART6 + 10H);
					USART6CR3*  = ADDRESS(USART6 + 14H);
					USART6GTPR* = ADDRESS(USART6 + 18H);
				ADC1ADC2ADC3* = ADDRESS(40012000H);
					ADC1* = ADC1ADC2ADC3;
						ADC1SR*     = ADDRESS(ADC1 + 0);
						ADC1CR1*    = ADDRESS(ADC1 + 4);
						ADC1CR2*    = ADDRESS(ADC1 + 8);
						ADC1SMPR1*  = ADDRESS(ADC1 + 0CH);
						ADC1SMPR2*  = ADDRESS(ADC1 + 10H);
						ADC1JOFR1*  = ADDRESS(ADC1 + 14H);
						ADC1JOFR2*  = ADDRESS(ADC1 + 18H);
						ADC1JOFR3*  = ADDRESS(ADC1 + 1CH);
						ADC1JOFR4*  = ADDRESS(ADC1 + 20H);
						ADC1HTR*    = ADDRESS(ADC1 + 24H);
						ADC1LTR*    = ADDRESS(ADC1 + 28H);
						ADC1SQR1*   = ADDRESS(ADC1 + 2CH);
						ADC1SQR2*   = ADDRESS(ADC1 + 30H);
						ADC1SQR3*   = ADDRESS(ADC1 + 34H);
						ADC1JSQR*   = ADDRESS(ADC1 + 38H);
						ADC1JDR1*   = ADDRESS(ADC1 + 3CH);
						ADC1JDR2*   = ADDRESS(ADC1 + 40H);
						ADC1JDR3*   = ADDRESS(ADC1 + 44H);
						ADC1JDR4*   = ADDRESS(ADC1 + 48H);
						ADC1DR*     = ADDRESS(ADC1 + 4CH);
					ADC2* = ADDRESS(ADC1ADC2ADC3 + 100H);
						ADC2SR*     = ADDRESS(ADC2 + 0);
						ADC2CR1*    = ADDRESS(ADC2 + 4);
						ADC2CR2*    = ADDRESS(ADC2 + 8);
						ADC2SMPR1*  = ADDRESS(ADC2 + 0CH);
						ADC2SMPR2*  = ADDRESS(ADC2 + 10H);
						ADC2JOFR1*  = ADDRESS(ADC2 + 14H);
						ADC2JOFR2*  = ADDRESS(ADC2 + 18H);
						ADC2JOFR3*  = ADDRESS(ADC2 + 1CH);
						ADC2JOFR4*  = ADDRESS(ADC2 + 20H);
						ADC2HTR*    = ADDRESS(ADC2 + 24H);
						ADC2LTR*    = ADDRESS(ADC2 + 28H);
						ADC2SQR1*   = ADDRESS(ADC2 + 2CH);
						ADC2SQR2*   = ADDRESS(ADC2 + 30H);
						ADC2SQR3*   = ADDRESS(ADC2 + 34H);
						ADC2JSQR*   = ADDRESS(ADC2 + 38H);
						ADC2JDR1*   = ADDRESS(ADC2 + 3CH);
						ADC2JDR2*   = ADDRESS(ADC2 + 40H);
						ADC2JDR3*   = ADDRESS(ADC2 + 44H);
						ADC2JDR4*   = ADDRESS(ADC2 + 48H);
						ADC2DR*     = ADDRESS(ADC2 + 4CH);
					ADC3* = ADDRESS(ADC1ADC2ADC3 + 200H);
						ADC3SR*     = ADDRESS(ADC3 + 0);
						ADC3CR1*    = ADDRESS(ADC3 + 4);
						ADC3CR2*    = ADDRESS(ADC3 + 8);
						ADC3SMPR1*  = ADDRESS(ADC3 + 0CH);
						ADC3SMPR2*  = ADDRESS(ADC3 + 10H);
						ADC3JOFR1*  = ADDRESS(ADC3 + 14H);
						ADC3JOFR2*  = ADDRESS(ADC3 + 18H);
						ADC3JOFR3*  = ADDRESS(ADC3 + 1CH);
						ADC3JOFR4*  = ADDRESS(ADC3 + 20H);
						ADC3HTR*    = ADDRESS(ADC3 + 24H);
						ADC3LTR*    = ADDRESS(ADC3 + 28H);
						ADC3SQR1*   = ADDRESS(ADC3 + 2CH);
						ADC3SQR2*   = ADDRESS(ADC3 + 30H);
						ADC3SQR3*   = ADDRESS(ADC3 + 34H);
						ADC3JSQR*   = ADDRESS(ADC3 + 38H);
						ADC3JDR1*   = ADDRESS(ADC3 + 3CH);
						ADC3JDR2*   = ADDRESS(ADC3 + 40H);
						ADC3JDR3*   = ADDRESS(ADC3 + 44H);
						ADC3JDR4*   = ADDRESS(ADC3 + 48H);
						ADC3DR*     = ADDRESS(ADC3 + 4CH);
					ADCCommon* = ADDRESS(ADC1ADC2ADC3 + 300H);
						ADCCSR* = ADDRESS(ADCCommon + 0);
						ADCCCR* = ADDRESS(ADCCommon + 4);
						ADCCDR* = ADDRESS(ADCCommon + 8);
				SDIO* = ADDRESS(40012C00H);
					SDIOPOWER*  = ADDRESS(SDIO + 0);
					SDIOCLKCR*  = ADDRESS(SDIO + 4);
					SDIOARG*    = ADDRESS(SDIO + 8);
					SDIOCMD*    = ADDRESS(SDIO + 0CH);
					SDIORESPCMD*= ADDRESS(SDIO + 10H);
					SDIORESP1*  = ADDRESS(SDIO + 14H);
					SDIORESP2*  = ADDRESS(SDIO + 18H);
					SDIORESP3*  = ADDRESS(SDIO + 1CH);
					SDIORESP4*  = ADDRESS(SDIO + 20H);
					SDIODTIMER* = ADDRESS(SDIO + 24H);
					SDIODLEN*   = ADDRESS(SDIO + 28H);
					SDIODCTRL*  = ADDRESS(SDIO + 2CH);
					SDIODCOUNT* = ADDRESS(SDIO + 30H);
					SDIOSTA*    = ADDRESS(SDIO + 34H);
					SDIOICR*    = ADDRESS(SDIO + 38H);
					SDIOMASK*   = ADDRESS(SDIO + 3CH);
					SDIOFIFOCNT*= ADDRESS(SDIO + 48H);
					SDIOFIFO*   = ADDRESS(SDIO + 80H);
				SPI1* = ADDRESS(40013000H); I2S1* = SPI1;
					SPI1CR1*    = ADDRESS(SPI1 + 0);
					SPI1CR2*    = ADDRESS(SPI1 + 4);
					SPI1SR*     = ADDRESS(SPI1 + 8);
					SPI1DR*     = ADDRESS(SPI1 + 0CH);
					SPI1CRCPR*  = ADDRESS(SPI1 + 10H);
					SPI1RXCRCR* = ADDRESS(SPI1 + 14H);
					SPI1TXCRCR* = ADDRESS(SPI1 + 18H);
					SPI1I2SCFGR*= ADDRESS(SPI1 + 1CH);
					SPI1I2SPR*  = ADDRESS(SPI1 + 20H);
				SPI4* = ADDRESS(40013400H); I2S4* = SPI4;
					SPI4CR1*    = ADDRESS(SPI4 + 0);
					SPI4CR2*    = ADDRESS(SPI4 + 4);
					SPI4SR*     = ADDRESS(SPI4 + 8);
					SPI4DR*     = ADDRESS(SPI4 + 0CH);
					SPI4CRCPR*  = ADDRESS(SPI4 + 10H);
					SPI4RXCRCR* = ADDRESS(SPI4 + 14H);
					SPI4TXCRCR* = ADDRESS(SPI4 + 18H);
					SPI4I2SCFGR*= ADDRESS(SPI4 + 1CH);
					SPI4I2SPR*  = ADDRESS(SPI4 + 20H);
				SYSCFG* = ADDRESS(40013800H);
					SYSCFGMEMRMP*   = ADDRESS(SYSCFG + 0);
					SYSCFGPMC*      = ADDRESS(SYSCFG + 4);
					SYSCFGEXTICR1*  = ADDRESS(SYSCFG + 8);
					SYSCFGEXTICR2*  = ADDRESS(SYSCFG + 0CH);
					SYSCFGEXTICR3*  = ADDRESS(SYSCFG + 10H);
					SYSCFGEXTICR4*  = ADDRESS(SYSCFG + 14H);
					SYSCFGCMPCR*    = ADDRESS(SYSCFG + 20H);
					SYSCFGCFGR*     = ADDRESS(SYSCFG + 2CH);
				EXTI* = ADDRESS(40013C00H);
					EXTIIMR*    = ADDRESS(EXTI + 0);
					EXTIEMR*    = ADDRESS(EXTI + 4);
					EXTIRTSR*   = ADDRESS(EXTI + 8);
					EXTIFTSR*   = ADDRESS(EXTI + 0CH);
					EXTISWIER*  = ADDRESS(EXTI + 10H);
					EXTIPR*     = ADDRESS(EXTI + 14H);
				TIM9* = ADDRESS(40014000H);
					TIM9CR1*    = ADDRESS(TIM9 + 0);
					TIM9SMCR*   = ADDRESS(TIM9 + 8);
					TIM9DIER*   = ADDRESS(TIM9 + 0CH);
					TIM9SR*     = ADDRESS(TIM9 + 10H);
					TIM9EGR*    = ADDRESS(TIM9 + 14H);
					TIM9CCMR1*  = ADDRESS(TIM9 + 18H);
					TIM9CCER*   = ADDRESS(TIM9 + 20H);
					TIM9CNT*    = ADDRESS(TIM9 + 24H);
					TIM9PSC*    = ADDRESS(TIM9 + 28H);
					TIM9ARR*    = ADDRESS(TIM9 + 2CH);
					TIM9CCR1*   = ADDRESS(TIM9 + 34H);
					TIM9CCR2*   = ADDRESS(TIM9 + 38H);
				TIM10* = ADDRESS(40014400H);
					TIM10CR1*   = ADDRESS(TIM10 + 0);
					TIM10SMCR*  = ADDRESS(TIM10 + 8);
					TIM10DIER*  = ADDRESS(TIM10 + 0CH);
					TIM10SR*    = ADDRESS(TIM10 + 10H);
					TIM10EGR*   = ADDRESS(TIM10 + 14H);
					TIM10CCMR1* = ADDRESS(TIM10 + 18H);
					TIM10CCER*  = ADDRESS(TIM10 + 20H);
					TIM10CNT*   = ADDRESS(TIM10 + 24H);
					TIM10PSC*   = ADDRESS(TIM10 + 28H);
					TIM10ARR*   = ADDRESS(TIM10 + 2CH);
					TIM10CCR1*  = ADDRESS(TIM10 + 34H);
					TIM10OR*    = ADDRESS(TIM10 + 50H);
				TIM11* = ADDRESS(40014800H);
					TIM11CR1*   = ADDRESS(TIM11 + 0);
					TIM11SMCR*  = ADDRESS(TIM11 + 8);
					TIM11DIER*  = ADDRESS(TIM11 + 0CH);
					TIM11SR*    = ADDRESS(TIM11 + 10H);
					TIM11EGR*   = ADDRESS(TIM11 + 14H);
					TIM11CCMR1* = ADDRESS(TIM11 + 18H);
					TIM11CCER*  = ADDRESS(TIM11 + 20H);
					TIM11CNT*   = ADDRESS(TIM11 + 24H);
					TIM11PSC*   = ADDRESS(TIM11 + 28H);
					TIM11ARR*   = ADDRESS(TIM11 + 2CH);
					TIM11CCR1*  = ADDRESS(TIM11 + 34H);
					TIM11OR*    = ADDRESS(TIM11 + 50H);
				SPI5* = ADDRESS(40015000H); I2S5* = SPI5;
					SPI5CR1*    = ADDRESS(SPI5 + 0);
					SPI5CR2*    = ADDRESS(SPI5 + 4);
					SPI5SR*     = ADDRESS(SPI5 + 8);
					SPI5DR*     = ADDRESS(SPI5 + 0CH);
					SPI5CRCPR*  = ADDRESS(SPI5 + 10H);
					SPI5RXCRCR* = ADDRESS(SPI5 + 14H);
					SPI5TXCRCR* = ADDRESS(SPI5 + 18H);
					SPI5I2SCFGR*= ADDRESS(SPI5 + 1CH);
					SPI5I2SPR*  = ADDRESS(SPI5 + 20H);
				SPI6* = ADDRESS(40015400H);
					SPI6CR1*    = ADDRESS(SPI6 + 0);
					SPI6CR2*    = ADDRESS(SPI6 + 4);
					SPI6SR*     = ADDRESS(SPI6 + 8);
					SPI6DR*     = ADDRESS(SPI6 + 0CH);
					SPI6CRCPR*  = ADDRESS(SPI6 + 10H);
					SPI6RXCRCR* = ADDRESS(SPI6 + 14H);
					SPI6TXCRCR* = ADDRESS(SPI6 + 18H);
					SPI6I2SCFGR*= ADDRESS(SPI6 + 1CH);
					SPI6I2SPR*  = ADDRESS(SPI6 + 20H);
				SAI1* = ADDRESS(40015800H);
				SAI2* = ADDRESS(40015C00H);
				LTDC* = ADDRESS(40016800H);
			(* AHB1 *)
				GPIOA* = ADDRESS(40020000H);
					GPIOAMODER*     = ADDRESS(GPIOA + 0);
					GPIOAOTYPER*    = ADDRESS(GPIOA + 4);
					GPIOAOSPEEDR*   = ADDRESS(GPIOA + 8);
					GPIOAPUPDR*     = ADDRESS(GPIOA + 0CH);
					GPIOAIDR*       = ADDRESS(GPIOA + 10H);
					GPIOAODR*       = ADDRESS(GPIOA + 14H);
					GPIOABSRR*      = ADDRESS(GPIOA + 18H);
					GPIOALCKR*      = ADDRESS(GPIOA + 1CH);
					GPIOAAFRL*      = ADDRESS(GPIOA + 20H);
					GPIOAAFRH*      = ADDRESS(GPIOA + 24H);
				GPIOB* = ADDRESS(40020400H);
					GPIOBMODER*     = ADDRESS(GPIOB + 0);
					GPIOBOTYPER*    = ADDRESS(GPIOB + 4);
					GPIOBOSPEEDR*   = ADDRESS(GPIOB + 8);
					GPIOBPUPDR*     = ADDRESS(GPIOB + 0CH);
					GPIOBIDR*       = ADDRESS(GPIOB + 10H);
					GPIOBODR*       = ADDRESS(GPIOB + 14H);
					GPIOBBSRR*      = ADDRESS(GPIOB + 18H);
					GPIOBLCKR*      = ADDRESS(GPIOB + 1CH);
					GPIOBAFRL*      = ADDRESS(GPIOB + 20H);
					GPIOBAFRH*      = ADDRESS(GPIOB + 24H);
				GPIOC* = ADDRESS(40020800H);
					GPIOCMODER*     = ADDRESS(GPIOC + 0);
					GPIOCOTYPER*    = ADDRESS(GPIOC + 4);
					GPIOCOSPEEDR*   = ADDRESS(GPIOC + 8);
					GPIOCPUPDR*     = ADDRESS(GPIOC + 0CH);
					GPIOCIDR*       = ADDRESS(GPIOC + 10H);
					GPIOCODR*       = ADDRESS(GPIOC + 14H);
					GPIOCBSRR*      = ADDRESS(GPIOC + 18H);
					GPIOCLCKR*      = ADDRESS(GPIOC + 1CH);
					GPIOCAFRL*      = ADDRESS(GPIOC + 20H);
					GPIOCAFRH*      = ADDRESS(GPIOC + 24H);
				GPIOD* = ADDRESS(40020C00H);
					GPIODMODER*     = ADDRESS(GPIOD + 0);
					GPIODOTYPER*    = ADDRESS(GPIOD + 4);
					GPIODOSPEEDR*   = ADDRESS(GPIOD + 8);
					GPIODPUPDR*     = ADDRESS(GPIOD + 0CH);
					GPIODIDR*       = ADDRESS(GPIOD + 10H);
					GPIODODR*       = ADDRESS(GPIOD + 14H);
					GPIODBSRR*      = ADDRESS(GPIOD + 18H);
					GPIODLCKR*      = ADDRESS(GPIOD + 1CH);
					GPIODAFRL*      = ADDRESS(GPIOD + 20H);
					GPIODAFRH*      = ADDRESS(GPIOD + 24H);
				GPIOE* = ADDRESS(40021000H);
					GPIOEMODER*     = ADDRESS(GPIOE + 0);
					GPIOEOTYPER*    = ADDRESS(GPIOE + 4);
					GPIOEOSPEEDR*   = ADDRESS(GPIOE + 8);
					GPIOEPUPDR*     = ADDRESS(GPIOE + 0CH);
					GPIOEIDR*       = ADDRESS(GPIOE + 10H);
					GPIOEODR*       = ADDRESS(GPIOE + 14H);
					GPIOEBSRR*      = ADDRESS(GPIOE + 18H);
					GPIOELCKR*      = ADDRESS(GPIOE + 1CH);
					GPIOEAFRL*      = ADDRESS(GPIOE + 20H);
					GPIOEAFRH*      = ADDRESS(GPIOE + 24H);
				GPIOF* = ADDRESS(40021400H);
					GPIOFMODER*     = ADDRESS(GPIOF + 0);
					GPIOFOTYPER*    = ADDRESS(GPIOF + 4);
					GPIOFOSPEEDR*   = ADDRESS(GPIOF + 8);
					GPIOFPUPDR*     = ADDRESS(GPIOF + 0CH);
					GPIOFIDR*       = ADDRESS(GPIOF + 10H);
					GPIOFODR*       = ADDRESS(GPIOF + 14H);
					GPIOFBSRR*      = ADDRESS(GPIOF + 18H);
					GPIOFLCKR*      = ADDRESS(GPIOF + 1CH);
					GPIOFAFRL*      = ADDRESS(GPIOF + 20H);
					GPIOFAFRH*      = ADDRESS(GPIOF + 24H);
				GPIOG* = ADDRESS(40021800H);
					GPIOGMODER*     = ADDRESS(GPIOG + 0);
					GPIOGOTYPER*    = ADDRESS(GPIOG + 4);
					GPIOGOSPEEDR*   = ADDRESS(GPIOG + 8);
					GPIOGPUPDR*     = ADDRESS(GPIOG + 0CH);
					GPIOGIDR*       = ADDRESS(GPIOG + 10H);
					GPIOGODR*       = ADDRESS(GPIOG + 14H);
					GPIOGBSRR*      = ADDRESS(GPIOG + 18H);
					GPIOGLCKR*      = ADDRESS(GPIOG + 1CH);
					GPIOGAFRL*      = ADDRESS(GPIOG + 20H);
					GPIOGAFRH*      = ADDRESS(GPIOG + 24H);
				GPIOH* = ADDRESS(40021C00H);
					GPIOHMODER*     = ADDRESS(GPIOH + 0);
					GPIOHOTYPER*    = ADDRESS(GPIOH + 4);
					GPIOHOSPEEDR*   = ADDRESS(GPIOH + 8);
					GPIOHPUPDR*     = ADDRESS(GPIOH + 0CH);
					GPIOHIDR*       = ADDRESS(GPIOH + 10H);
					GPIOHODR*       = ADDRESS(GPIOH + 14H);
					GPIOHBSRR*      = ADDRESS(GPIOH + 18H);
					GPIOHLCKR*      = ADDRESS(GPIOH + 1CH);
					GPIOHAFRL*      = ADDRESS(GPIOH + 20H);
					GPIOHAFRH*      = ADDRESS(GPIOH + 24H);
				GPIOI* = ADDRESS(40022000H);
					GPIOIMODER*     = ADDRESS(GPIOI + 0);
					GPIOIOTYPER*    = ADDRESS(GPIOI + 4);
					GPIOIOSPEEDR*   = ADDRESS(GPIOI + 8);
					GPIOIPUPDR*     = ADDRESS(GPIOI + 0CH);
					GPIOIIDR*       = ADDRESS(GPIOI + 10H);
					GPIOIODR*       = ADDRESS(GPIOI + 14H);
					GPIOIBSRR*      = ADDRESS(GPIOI + 18H);
					GPIOILCKR*      = ADDRESS(GPIOI + 1CH);
					GPIOIAFRL*      = ADDRESS(GPIOI + 20H);
					GPIOIAFRH*      = ADDRESS(GPIOI + 24H);
				GPIOJ* = ADDRESS(40022400H);
					GPIOJMODER*     = ADDRESS(GPIOJ + 0);
					GPIOJOTYPER*    = ADDRESS(GPIOJ + 4);
					GPIOJOSPEEDR*   = ADDRESS(GPIOJ + 8);
					GPIOJPUPDR*     = ADDRESS(GPIOJ + 0CH);
					GPIOJIDR*       = ADDRESS(GPIOJ + 10H);
					GPIOJODR*       = ADDRESS(GPIOJ + 14H);
					GPIOJBSRR*      = ADDRESS(GPIOJ + 18H);
					GPIOJLCKR*      = ADDRESS(GPIOJ + 1CH);
					GPIOJAFRL*      = ADDRESS(GPIOJ + 20H);
					GPIOJAFRH*      = ADDRESS(GPIOJ + 24H);
				GPIOK* = ADDRESS(40022800H);
					GPIOKMODER*     = ADDRESS(GPIOK + 0);
					GPIOKOTYPER*    = ADDRESS(GPIOK + 4);
					GPIOKOSPEEDR*   = ADDRESS(GPIOK + 8);
					GPIOKPUPDR*     = ADDRESS(GPIOK + 0CH);
					GPIOKIDR*       = ADDRESS(GPIOK + 10H);
					GPIOKODR*       = ADDRESS(GPIOK + 14H);
					GPIOKBSRR*      = ADDRESS(GPIOK + 18H);
					GPIOKLCKR*      = ADDRESS(GPIOK + 1CH);
					GPIOKAFRL*      = ADDRESS(GPIOK + 20H);
					GPIOKAFRH*      = ADDRESS(GPIOK + 24H);
				CRC* = ADDRESS(40023000H);
					CRCDR*  = ADDRESS(CRC + 0);
					CRCIDR* = ADDRESS(CRC + 4);
					CRCCR*  = ADDRESS(CRC + 8);
				RCC* = ADDRESS(40023800H);
					RCCCR*          = ADDRESS(RCC + 0);
					RCCPLLCFGR*     = ADDRESS(RCC + 4);
					RCCCFGR*        = ADDRESS(RCC + 8);
					RCCCIR*         = ADDRESS(RCC + 0CH);
					RCCAHB1RSTR*    = ADDRESS(RCC + 10H);
					RCCAHB2RSTR*    = ADDRESS(RCC + 14H);
					RCCAHB3RSTR*    = ADDRESS(RCC + 18H);
					RCCAPB1RSTR*    = ADDRESS(RCC + 20H);
					RCCAPB2RSTR*    = ADDRESS(RCC + 24H);
					RCCAHB1ENR*     = ADDRESS(RCC + 30H);
					RCCAHB2ENR*     = ADDRESS(RCC + 34H);
					RCCAHB3ENR*     = ADDRESS(RCC + 38H);
					RCCAPB1ENR*     = ADDRESS(RCC + 40H);
					RCCAPB2ENR*     = ADDRESS(RCC + 44H);
					RCCAHB1LPENR*   = ADDRESS(RCC + 50H);
					RCCAHB2LPENR*   = ADDRESS(RCC + 54H);
					RCCAHB3LPENR*   = ADDRESS(RCC + 58H);
					RCCAPB1LPENR*   = ADDRESS(RCC + 60H);
					RCCAPB2LPENR*   = ADDRESS(RCC + 64H);
					RCCBDCR*        = ADDRESS(RCC + 70H);
					RCCCSR*         = ADDRESS(RCC + 74H);
					RCCSSCGR*       = ADDRESS(RCC + 80H);
					RCCPLLI2SCFGR*  = ADDRESS(RCC + 84H);
					RCCPLLSAICFGR*  = ADDRESS(RCC + 88H);
					RCCDCKCFGR*     = ADDRESS(RCC + 8CH);
					RCCCKGATENR*    = ADDRESS(RCC + 90H);
					RCCDCKCFGR2*    = ADDRESS(RCC + 94H);
				FlashInterface* = ADDRESS(40023C00H); (* Flash interface register *)
					FLASHACR*       = ADDRESS(FlashInterface + 0);
					FLASHKEYR*      = ADDRESS(FlashInterface + 4);
					FLASHOPTKEYR*   = ADDRESS(FlashInterface + 8);
					FLASHSR*        = ADDRESS(FlashInterface + 0CH);
					FLASHCR*        = ADDRESS(FlashInterface + 10H);
					FLASHOPTCR*     = ADDRESS(FlashInterface + 14H);
				BKPSRAM*    = ADDRESS(40024000H);
				DMA1*       = ADDRESS(40026000H);
				DMA2*       = ADDRESS(40026400H);
				ETHERNETMAC*= ADDRESS(40028000H);
				DMA2D*      = ADDRESS(4002B000H);
				USBOTGHS*   = ADDRESS(40040000H);
			(* AHB2 *)
				USBOTGFS*   = ADDRESS(50000000H);
				DCMI*       = ADDRESS(50050000H);
				CRYP*       = ADDRESS(50060000H);
				HASH*       = ADDRESS(50060400H);
				RNG* = ADDRESS(50060800H);
					RNGCR* = ADDRESS(RNG);
					RNGSR* = ADDRESS(RNG + 4);
					RNGDR* = ADDRESS(RNG + 8);
			(* AHB3 *)
				FSMCControlRegister*= ADDRESS(0A0000000H);
				QUADSPIRegister*    = ADDRESS(0A0001000H);
			DBGMCU* = ADDRESS(0E0042000H);
				DBGMCUIDCODE*   = ADDRESS(DBGMCU + 0);
				DBGMCUCR*       = ADDRESS(DBGMCU + 4);
				DBGMCUAPB1FZ*   = ADDRESS(DBGMCU + 8);
				DBGMCUAPB2FZ*   = ADDRESS(DBGMCU + 0CH);
		(* interrupt sources *)
        (* TODO: Can be removed? *)
			WWDGInt* = 0;
			PVDInt* = 1; EXTI16Int* = 1;
			TAMPSTAMPInt* = 2; EXTI21Int* = 2;
			RTCWKUPInt* = 3; EXTI22Int* = 3;
			FLASHInt* = 4;
			RCCInt* = 5;
			EXTI0Int* = 6;
			EXTI1Int* = 7;
			EXTI2Int* = 8;
			EXTI3Int* = 9;
			EXTI4Int* = 10;
			DMA1Stream0Int* = 11;
			DMA1Stream1Int* = 12;
			DMA1Stream2Int* = 13;
			DMA1Stream3Int* = 14;
			DMA1Stream4Int* = 15;
			DMA1Stream5Int* = 16;
			DMA1Stream6Int* = 17;
			ADCInt* = 18;
			CAN1TXInt* = 19;
			CAN1RX0Int* = 20;
			CAN1RX1Int* = 21;
			CAN1SCEInt* = 22;
			EXTI95Int* = 23;
			TIM1BRKTIM9Int* = 24;
			TIM1UPTIM10Int* = 25;
			TIM1TRGCOMTIM11Int* = 26;
			TIM1CCInt* = 27;
			TIM2Int* = 28;
			TIM3Int* = 29;
			TIM4Int* = 30;
			I2C1EVInt* = 31;
			I2C1ERInt* = 32;
			I2C2EVInt* = 33;
			I2C2ERInt* = 34;
			SPI1Int* = 35;
			SPI2Int* = 36;
			USART1Int* = 37;
			USART2Int* = 38;
			USART3Int* = 39;
			EXTI1510Int* = 40;
			RTCAlarmInt* = 41; EXTI17Int* = 41;
			OTGFSWKUPInt* = 42; EXTI18Int* = 42;
			TIM8BRKTIM12Int* = 43;
			TIM8UPTIM13Int* = 44;
			TIM8TRGCOMTIM14Int* = 45;
			TIM8CCInt* = 46;
			DMA1Stream7Int* = 47;
			FSMCInt* = 48;
			SDIOInt* = 49;
			TIM5Int* = 50;
			SPI3Int* = 51;
			UART4Int* = 52;
			UART5Int* = 53;
			TIM6DACInt* = 54;
			TIM7Int* = 55;
			DMA2Stream0Int* = 56;
			DMA2Stream1Int* = 57;
			DMA2Stream2Int* = 58;
			DMA2Stream3Int* = 59;
			DMA2Stream4Int* = 60;
			ETHInt* = 61;
			ETHWKUPInt* = 62;
			CAN2TXInt* = 63;
			CAN2RX0Int* = 64;
			CAN2RX1Int* = 65;
			CAN2SCEInt* = 66;
			OTGFSInt* = 67;
			DMA2Stream5Int* = 68;
			DMA2Stream6Int* = 69;
			DMA2Stream7Int* = 70;
			USART6Int* = 71;
			I2C3EVInt* = 72;
			I2C3ERInt* = 73;
			OTGHSEP1OUTInt* = 74;
			OTGHSEP1INInt* = 75;
			OTGHSWKUPInt* = 76;
			OTGHSInt* = 77;
			DCMIInt* = 78;
			CRYPInt* = 79;
			HASHRNGInt* = 80;
			FPUInt* = 81;
			SPI4Int* = 84;
			SPI5Int* = 85;
			SAI1Int* = 87;
			SAI2Int* = 91;
			QuadSPIInt* = 92;
			HDMICECInt* = 93;
			SPDIFRxInt* = 94;
			FMPI2C1Int* = 95;
			FMPI2C1ErrorInt* = 96;

END STM32F4.
