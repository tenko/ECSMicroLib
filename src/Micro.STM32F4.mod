MODULE STM32F4 IN Micro;

	(*
		Alexander Shiryaev, 2015.02, 2015.07, 2016.10, 2017.10, 2018.05, 2021.08
        Modified by Tenko for use with ECS
        
		RM0368, Reference manual,
			STM32F401x{B,C,D,E}

		RM0090, Reference manual,
			STM32F405xx/07xx
			[ STM32F415xx/17xx ]

		RM0383, Reference manual,
			STM32F411xC/E

		RM0390, Reference manual,
			STM32F446xx
	*)
    IMPORT SYSTEM;

    TYPE ADDRESS = SYSTEM.ADDRESS;

	CONST
		(* memory map *)
			BootStart* = ADDRESS(0H);
			FlashStart* = ADDRESS(8000000H);
				Sector0* =  ADDRESS(FlashStart + 0);
				Sector1* =  ADDRESS(FlashStart + 4000H);
				Sector2* =  ADDRESS(FlashStart + 8000H);
				Sector3* =  ADDRESS(FlashStart + 0C000H);
				Sector4* =  ADDRESS(FlashStart + 10000H);
				Sector5* =  ADDRESS(FlashStart + 20000H);
				Sector6* =  ADDRESS(FlashStart + 40000H);
				Sector7* =  ADDRESS(FlashStart + 60000H);
				Sector8* =  ADDRESS(FlashStart + 80000H);
				Sector9* =  ADDRESS(FlashStart + 0A0000H);
				Sector10* = ADDRESS(FlashStart + 0C0000H);
				Sector11* = ADDRESS(FlashStart + 0E0000H);
			SystemMemory* = ADDRESS(1FFF0000H); (* 30 KiB *)
			OTPArea* = ADDRESS(1FFF7800H); (* 528 B *)
			(* device electronic signature *)
				(* Unique device ID register (96 bits) *)
					UID* = ADDRESS(1FFF7A10H); (* 12 B *)
						UID0* = ADDRESS(UID + 0);
						UID1* = ADDRESS(UID0 + 4);
						UID2* =ADDRESS( UID1 + 4);
				(* Flash size, in KiB *)
					FlashSizeKiBAdr* = ADDRESS(1FFF7A22H); (* 2 B *)
			OptionBytes* = ADDRESS(1FFFC000H); (* 16 B *)
			SRAMStart* = ADDRESS(20000000H);
			(* APB1 *)
				TIM2* = ADDRESS(40000000H);
					TIM2_CR1*    = ADDRESS(TIM2 + 0);
					TIM2_CR2*    = ADDRESS(TIM2 + 4);
					TIM2_SMCR*   = ADDRESS(TIM2 + 8);
					TIM2_DIER*   = ADDRESS(TIM2 + 0CH);
					TIM2_SR*     = ADDRESS(TIM2 + 10H);
					TIM2_EGR*    = ADDRESS(TIM2 + 14H);
					TIM2_CCMR1*  = ADDRESS(TIM2 + 18H);
					TIM2_CCMR2*  = ADDRESS(TIM2 + 1CH);
					TIM2_CCER*   = ADDRESS(TIM2 + 20H);
					TIM2_CNT*    = ADDRESS(TIM2 + 24H);
					TIM2_PSC*    = ADDRESS(TIM2 + 28H);
					TIM2_ARR*    = ADDRESS(TIM2 + 2CH);
					TIM2_CCR1*   = ADDRESS(TIM2 + 34H);
					TIM2_CCR2*   = ADDRESS(TIM2 + 38H);
					TIM2_CCR3*   = ADDRESS(TIM2 + 3CH);
					TIM2_CCR4*   = ADDRESS(TIM2 + 40H);
					TIM2_DCR*    = ADDRESS(TIM2 + 48H);
					TIM2_DMAR*   = ADDRESS(TIM2 + 4CH);
					TIM2_OR*     = ADDRESS(TIM2 + 50H);
				TIM3* = ADDRESS(40000400H);
					TIM3_CR1*    = ADDRESS(TIM3 + 0);
					TIM3_CR2*    = ADDRESS(TIM3 + 4);
					TIM3_SMCR*   = ADDRESS(TIM3 + 8);
					TIM3_DIER*   = ADDRESS(TIM3 + 0CH);
					TIM3_SR*     = ADDRESS(TIM3 + 10H);
					TIM3_EGR*    = ADDRESS(TIM3 + 14H);
					TIM3_CCMR1*  = ADDRESS(TIM3 + 18H);
					TIM3_CCMR2*  = ADDRESS(TIM3 + 1CH);
					TIM3_CCER*   = ADDRESS(TIM3 + 20H);
					TIM3_CNT*    = ADDRESS(TIM3 + 24H);
					TIM3_PSC*    = ADDRESS(TIM3 + 28H);
					TIM3_ARR*    = ADDRESS(TIM3 + 2CH);
					TIM3_CCR1*   = ADDRESS(TIM3 + 34H);
					TIM3_CCR2*   = ADDRESS(TIM3 + 38H);
					TIM3_CCR3*   = ADDRESS(TIM3 + 3CH);
					TIM3_CCR4*   = ADDRESS(TIM3 + 40H);
					TIM3_DCR*    = ADDRESS(TIM3 + 48H);
					TIM3_DMAR*   = ADDRESS(TIM3 + 4CH);
				TIM4* = ADDRESS(40000800H);
					TIM4_CR1*    = ADDRESS(TIM4 + 0);
					TIM4_CR2*    = ADDRESS(TIM4 + 4);
					TIM4_SMCR*   = ADDRESS(TIM4 + 8);
					TIM4_DIER*   = ADDRESS(TIM4 + 0CH);
					TIM4_SR*     = ADDRESS(TIM4 + 10H);
					TIM4_EGR*    = ADDRESS(TIM4 + 14H);
					TIM4_CCMR1*  = ADDRESS(TIM4 + 18H);
					TIM4_CCMR2*  = ADDRESS(TIM4 + 1CH);
					TIM4_CCER*   = ADDRESS(TIM4 + 20H);
					TIM4_CNT*    = ADDRESS(TIM4 + 24H);
					TIM4_PSC*    = ADDRESS(TIM4 + 28H);
					TIM4_ARR*    = ADDRESS(TIM4 + 2CH);
					TIM4_CCR1*   = ADDRESS(TIM4 + 34H);
					TIM4_CCR2*   = ADDRESS(TIM4 + 38H);
					TIM4_CCR3*   = ADDRESS(TIM4 + 3CH);
					TIM4_CCR4*   = ADDRESS(TIM4 + 40H);
					TIM4_DCR*    = ADDRESS(TIM4 + 48H);
					TIM4_DMAR*   = ADDRESS(TIM4 + 4CH);
				TIM5* = ADDRESS(40000C00H);
					TIM5_CR1*    = ADDRESS(TIM5 + 0);
					TIM5_CR2*    = ADDRESS(TIM5 + 4);
					TIM5_SMCR*   = ADDRESS(TIM5 + 8);
					TIM5_DIER*   = ADDRESS(TIM5 + 0CH);
					TIM5_SR*     = ADDRESS(TIM5 + 10H);
					TIM5_EGR*    = ADDRESS(TIM5 + 14H);
					TIM5_CCMR1*  = ADDRESS(TIM5 + 18H);
					TIM5_CCMR2*  = ADDRESS(TIM5 + 1CH);
					TIM5_CCER*   = ADDRESS(TIM5 + 20H);
					TIM5_CNT*    = ADDRESS(TIM5 + 24H);
					TIM5_PSC*    = ADDRESS(TIM5 + 28H);
					TIM5_ARR*    = ADDRESS(TIM5 + 2CH);
					TIM5_CCR1*   = ADDRESS(TIM5 + 34H);
					TIM5_CCR2*   = ADDRESS(TIM5 + 38H);
					TIM5_CCR3*   = ADDRESS(TIM5 + 3CH);
					TIM5_CCR4*   = ADDRESS(TIM5 + 40H);
					TIM5_DCR*    = ADDRESS(TIM5 + 48H);
					TIM5_DMAR*   = ADDRESS(TIM5 + 4CH);
					TIM5_OR*     = ADDRESS(TIM5 + 50H);
				TIM6* = ADDRESS(40001000H);
					TIM6_CR1*    = ADDRESS(TIM6 + 0);
					TIM6_CR2*    = ADDRESS(TIM6 + 4);
					TIM6_DIER*   = ADDRESS(TIM6 + 0CH);
					TIM6_SR*     = ADDRESS(TIM6 + 10H);
					TIM6_EGR*    = ADDRESS(TIM6 + 14H);
					TIM6_CNT*    = ADDRESS(TIM6 + 24H);
					TIM6_PSC*    = ADDRESS(TIM6 + 28H);
					TIM6_ARR*    = ADDRESS(TIM6 + 2CH);
				TIM7* = ADDRESS(40001400H);
					TIM7_CR1*    = ADDRESS(TIM7 + 0);
					TIM7_CR2*    = ADDRESS(TIM7 + 4);
					TIM7_DIER*   = ADDRESS(TIM7 + 0CH);
					TIM7_SR*     = ADDRESS(TIM7 + 10H);
					TIM7_EGR*    = ADDRESS(TIM7 + 14H);
					TIM7_CNT*    = ADDRESS(TIM7 + 24H);
					TIM7_PSC*    = ADDRESS(TIM7 + 28H);
					TIM7_ARR*    = ADDRESS(TIM7 + 2CH);
				TIM12* = ADDRESS(40001800H);
					TIM12_CR1*   = ADDRESS(TIM12 + 0);
					TIM12_SMCR*  = ADDRESS(TIM12 + 8);
					TIM12_DIER*  = ADDRESS(TIM12 + 0CH);
					TIM12_SR*    = ADDRESS(TIM12 + 10H);
					TIM12_EGR*   = ADDRESS(TIM12 + 14H);
					TIM12_CCMR1* = ADDRESS(TIM12 + 18H);
					TIM12_CCER*  = ADDRESS(TIM12 + 20H);
					TIM12_CNT*   = ADDRESS(TIM12 + 24H);
					TIM12_PSC*   = ADDRESS(TIM12 + 28H);
					TIM12_ARR*   = ADDRESS(TIM12 + 2CH);
					TIM12_CCR1*  = ADDRESS(TIM12 + 34H);
					TIM12_CCR2*  = ADDRESS(TIM12 + 38H);
				TIM13* = ADDRESS(40001C00H);
					TIM13_CR1*   = ADDRESS(TIM13 + 0);
					TIM13_SMCR*  = ADDRESS(TIM13 + 8);
					TIM13_DIER*  = ADDRESS(TIM13 + 0CH);
					TIM13_SR*    = ADDRESS(TIM13 + 10H);
					TIM13_EGR*   = ADDRESS(TIM13 + 14H);
					TIM13_CCMR1* = ADDRESS(TIM13 + 18H);
					TIM13_CCER*  = ADDRESS(TIM13 + 20H);
					TIM13_CNT*   = ADDRESS(TIM13 + 24H);
					TIM13_PSC*   = ADDRESS(TIM13 + 28H);
					TIM13_ARR*   = ADDRESS(TIM13 + 2CH);
					TIM13_CCR1*  = ADDRESS(TIM13 + 34H);
					TIM13_OR*    = ADDRESS(TIM13 + 50H);
				TIM14* = ADDRESS(40002000H);
					TIM14_CR1*   = ADDRESS(TIM14 + 0);
					TIM14_SMCR*  = ADDRESS(TIM14 + 8);
					TIM14_DIER*  = ADDRESS(TIM14 + 0CH);
					TIM14_SR*    = ADDRESS(TIM14 + 10H);
					TIM14_EGR*   = ADDRESS(TIM14 + 14H);
					TIM14_CCMR1* = ADDRESS(TIM14 + 18H);
					TIM14_CCER*  = ADDRESS(TIM14 + 20H);
					TIM14_CNT*   = ADDRESS(TIM14 + 24H);
					TIM14_PSC*   = ADDRESS(TIM14 + 28H);
					TIM14_ARR*   = ADDRESS(TIM14 + 2CH);
					TIM14_CCR1*  = ADDRESS(TIM14 + 34H);
					TIM14_OR*    = ADDRESS(TIM14 + 50H);
				RTCBKPRegisters* = ADDRESS(40002800H);
				WWDG* = ADDRESS(40002C00H);
					WWDG_CR*     = ADDRESS(WWDG + 0);
					WWDG_CFR*    = ADDRESS(WWDG + 4);
					WWDG_SR*     = ADDRESS(WWDG + 8);
				IWDG* = ADDRESS(40003000H);
					IWDG_KR*     = ADDRESS(IWDG + 0);
					IWDG_PR*     = ADDRESS(IWDG + 4);
					IWDG_RLR*    = ADDRESS(IWDG + 8);
					IWDG_SR*     = ADDRESS(IWDG + 0CH);
				I2S2ext* = ADDRESS(40003400H);
				SPI2* = ADDRESS(40003800H); I2S2* = SPI2;
					SPI2_CR1*    = ADDRESS(SPI2 + 0);
					SPI2_CR2*    = ADDRESS(SPI2 + 4);
					SPI2_SR*     = ADDRESS(SPI2 + 8);
					SPI2_DR*     = ADDRESS(SPI2 + 0CH);
					SPI2_CRCPR*  = ADDRESS(SPI2 + 10H);
					SPI2_RXCRCR* = ADDRESS(SPI2 + 14H);
					SPI2_TXCRCR* = ADDRESS(SPI2 + 18H);
					SPI2_I2SCFGR*= ADDRESS(SPI2 + 1CH);
					SPI2_I2SPR*  = ADDRESS(SPI2 + 20H);
				SPI3* = ADDRESS(40003C00H); I2S3* = SPI3;
					SPI3_CR1*    = ADDRESS(SPI3 + 0);
					SPI3_CR2*    = ADDRESS(SPI3 + 4);
					SPI3_SR*     = ADDRESS(SPI3 + 8);
					SPI3_DR*     = ADDRESS(SPI3 + 0CH);
					SPI3_CRCPR*  = ADDRESS(SPI3 + 10H);
					SPI3_RXCRCR* = ADDRESS(SPI3 + 14H);
					SPI3_TXCRCR* = ADDRESS(SPI3 + 18H);
					SPI3_I2SCFGR*= ADDRESS(SPI3 + 1CH);
					SPI3_I2SPR*  = ADDRESS(SPI3 + 20H);
				SPDIFRX* = ADDRESS(40004000H); I2S3ext* = ADDRESS(40004000H);
				USART2* = ADDRESS(40004400H);
					USART2_SR*   = ADDRESS(USART2 + 0);
					USART2_DR*   = ADDRESS(USART2 + 4);
					USART2_BRR*  = ADDRESS(USART2 + 8);
					USART2_CR1*  = ADDRESS(USART2 + 0CH);
					USART2_CR2*  = ADDRESS(USART2 + 10H);
					USART2_CR3*  = ADDRESS(USART2 + 14H);
					USART2_GTPR* = ADDRESS(USART2 + 18H);
				USART3* = ADDRESS(40004800H);
					USART3_SR*   = ADDRESS(USART3 + 0);
					USART3_DR*   = ADDRESS(USART3 + 4);
					USART3_BRR*  = ADDRESS(USART3 + 8);
					USART3_CR1*  = ADDRESS(USART3 + 0CH);
					USART3_CR2*  = ADDRESS(USART3 + 10H);
					USART3_CR3*  = ADDRESS(USART3 + 14H);
					USART3_GTPR* = ADDRESS(USART3 + 18H);
				UART4* = ADDRESS(40004C00H);
					USART4_SR*   = ADDRESS(UART4 + 0);
					USART4_DR*   = ADDRESS(UART4 + 4);
					USART4_BRR*  = ADDRESS(UART4 + 8);
					USART4_CR1*  = ADDRESS(UART4 + 0CH);
					USART4_CR2*  = ADDRESS(UART4 + 10H);
					USART4_CR3*  = ADDRESS(UART4 + 14H);
					USART4_GTPR* = ADDRESS(UART4 + 18H);
				UART5* = ADDRESS(40005000H);
					USART5_SR*   = ADDRESS(UART5 + 0);
					USART5_DR*   = ADDRESS(UART5 + 4);
					USART5_BRR*  = ADDRESS(UART5 + 8);
					USART5_CR1*  = ADDRESS(UART5 + 0CH);
					USART5_CR2*  = ADDRESS(UART5 + 10H);
					USART5_CR3*  = ADDRESS(UART5 + 14H);
					USART5_GTPR* = ADDRESS(UART5 + 18H);
				I2C1* = ADDRESS(40005400H);
					I2C1_CR1*    = ADDRESS(I2C1 + 0);
					I2C1_CR2*    = ADDRESS(I2C1 + 4);
					I2C1_OAR1*   = ADDRESS(I2C1 + 8);
					I2C1_OAR2*   = ADDRESS(I2C1 + 0CH);
					I2C1_DR*     = ADDRESS(I2C1 + 10H);
					I2C1_SR1*    = ADDRESS(I2C1 + 14H);
					I2C1_SR2*    = ADDRESS(I2C1 + 18H);
					I2C1_CCR*    = ADDRESS(I2C1 + 1CH);
					I2C1_TRISE*  = ADDRESS(I2C1 + 20H);
					I2C1_FLTR*   = ADDRESS(I2C1 + 24H);
				I2C2* = ADDRESS(40005800H);
					I2C2_CR1*    = ADDRESS(I2C2 + 0);
					I2C2_CR2*    = ADDRESS(I2C2 + 4);
					I2C2_OAR1*   = ADDRESS(I2C2 + 8);
					I2C2_OAR2*   = ADDRESS(I2C2 + 0CH);
					I2C2_DR*     = ADDRESS(I2C2 + 10H);
					I2C2_SR1*    = ADDRESS(I2C2 + 14H);
					I2C2_SR2*    = ADDRESS(I2C2 + 18H);
					I2C2_CCR*    = ADDRESS(I2C2 + 1CH);
					I2C2_TRISE*  = ADDRESS(I2C2 + 20H);
					I2C2_FLTR*   = ADDRESS(I2C2 + 24H);
				I2C3* = ADDRESS(40005C00H);
					I2C3_CR1*    = (I2C3 + 0);
					I2C3_CR2*    = (I2C3 + 4);
					I2C3_OAR1*   = (I2C3 + 8);
					I2C3_OAR2*   = (I2C3 + 0CH);
					I2C3_DR*     = (I2C3 + 10H);
					I2C3_SR1*    = (I2C3 + 14H);
					I2C3_SR2*    = (I2C3 + 18H);
					I2C3_CCR*    = (I2C3 + 1CH);
					I2C3_TRISE*  = (I2C3 + 20H);
					I2C3_FLTR*   = (I2C3 + 24H);
				CAN1* = ADDRESS(40006400H);
				CAN2* = ADDRESS(40006800H);
				HDMICEC* = ADDRESS(40006C00H);
				PWR* = ADDRESS(40007000H);
					PWR_CR*  = ADDRESS(PWR + 0);
					PWR_CSR* = ADDRESS(PWR + 4);
				DAC* = ADDRESS(40007400H);
					DAC_CR*      = ADDRESS(DAC + 0);
					DAC_SWTRIGR* = ADDRESS(DAC + 4);
					DAC_DHR12R1* = ADDRESS(DAC + 8);
					DAC_DHR12L1* = ADDRESS(DAC + 0CH);
					DAC_DHR8R1*  = ADDRESS(DAC + 10H);
					DAC_DHR12R2* = ADDRESS(DAC + 14H);
					DAC_DHR12L2* = ADDRESS(DAC + 18H);
					DAC_DHR8R2*  = ADDRESS(DAC + 1CH);
					DAC_DHR12RD* = ADDRESS(DAC + 20H);
					DAC_DHR12LD* = ADDRESS(DAC + 24H);
					DAC_DHR8RD*  = ADDRESS(DAC + 28H);
					DAC_DOR1*    = ADDRESS(DAC + 2CH);
					DAC_DOR2*    = ADDRESS(DAC + 30H);
					DAC_SR*      = ADDRESS(DAC + 34H);
				UART7* = ADDRESS(40007800H);
					USART7_SR*   = ADDRESS(UART7 + 0);
					USART7_DR*   = ADDRESS(UART7 + 4);
					USART7_BRR*  = ADDRESS(UART7 + 8);
					USART7_CR1*  = ADDRESS(UART7 + 0CH);
					USART7_CR2*  = ADDRESS(UART7 + 10H);
					USART7_CR3*  = ADDRESS(UART7 + 14H);
					USART7_GTPR* = ADDRESS(UART7 + 18H);
				UART8* = ADDRESS(40007C00H);
					USART8_SR*   = ADDRESS(UART8 + 0);
					USART8_DR*   = ADDRESS(UART8 + 4);
					USART8_BRR*  = ADDRESS(UART8 + 8);
					USART8_CR1*  = ADDRESS(UART8 + 0CH);
					USART8_CR2*  = ADDRESS(UART8 + 10H);
					USART8_CR3*  = ADDRESS(UART8 + 14H);
					USART8_GTPR* = ADDRESS(UART8 + 18H);
			(* APB2 *)
				TIM1* = ADDRESS(40010000H);
					TIM1_CR1*    = ADDRESS(TIM1 + 0);
					TIM1_CR2*    = ADDRESS(TIM1 + 4);
					TIM1_SMCR*   = ADDRESS(TIM1 + 8);
					TIM1_DIER*   = ADDRESS(TIM1 + 0CH);
					TIM1_SR*     = ADDRESS(TIM1 + 10H);
					TIM1_EGR*    = ADDRESS(TIM1 + 14H);
					TIM1_CCMR1*  = ADDRESS(TIM1 + 18H);
					TIM1_CCMR2*  = ADDRESS(TIM1 + 1CH);
					TIM1_CCER*   = ADDRESS(TIM1 + 20H);
					TIM1_CNT*    = ADDRESS(TIM1 + 24H);
					TIM1_PSC*    = ADDRESS(TIM1 + 28H);
					TIM1_ARR*    = ADDRESS(TIM1 + 2CH);
					TIM1_RCR*    = ADDRESS(TIM1 + 30H);
					TIM1_CCR1*   = ADDRESS(TIM1 + 34H);
					TIM1_CCR2*   = ADDRESS(TIM1 + 38H);
					TIM1_CCR3*   = ADDRESS(TIM1 + 3CH);
					TIM1_CCR4*   = ADDRESS(TIM1 + 40H);
					TIM1_BDTR*   = ADDRESS(TIM1 + 44H);
					TIM1_DCR*    = ADDRESS(TIM1 + 48H);
					TIM1_DMAR*   = ADDRESS(TIM1 + 4CH);
				TIM8* = ADDRESS(40010400H);
					TIM8_CR1*    = ADDRESS(TIM8 + 0);
					TIM8_CR2*    = ADDRESS(TIM8 + 4);
					TIM8_SMCR*   = ADDRESS(TIM8 + 8);
					TIM8_DIER*   = ADDRESS(TIM8 + 0CH);
					TIM8_SR*     = ADDRESS(TIM8 + 10H);
					TIM8_EGR*    = ADDRESS(TIM8 + 14H);
					TIM8_CCMR1*  = ADDRESS(TIM8 + 18H);
					TIM8_CCMR2*  = ADDRESS(TIM8 + 1CH);
					TIM8_CCER*   = ADDRESS(TIM8 + 20H);
					TIM8_CNT*    = ADDRESS(TIM8 + 24H);
					TIM8_PSC*    = ADDRESS(TIM8 + 28H);
					TIM8_ARR*    = ADDRESS(TIM8 + 2CH);
					TIM8_RCR*    = ADDRESS(TIM8 + 30H);
					TIM8_CCR1*   = ADDRESS(TIM8 + 34H);
					TIM8_CCR2*   = ADDRESS(TIM8 + 38H);
					TIM8_CCR3*   = ADDRESS(TIM8 + 3CH);
					TIM8_CCR4*   = ADDRESS(TIM8 + 40H);
					TIM8_BDTR*   = ADDRESS(TIM8 + 44H);
					TIM8_DCR*    = ADDRESS(TIM8 + 48H);
					TIM8_DMAR*   = ADDRESS(TIM8 + 4CH);
				USART1* = ADDRESS(40011000H);
					USART1_SR*   = ADDRESS(USART1 + 0);
					USART1_DR*   = ADDRESS(USART1 + 4);
					USART1_BRR*  = ADDRESS(USART1 + 8);
					USART1_CR1*  = ADDRESS(USART1 + 0CH);
					USART1_CR2*  = ADDRESS(USART1 + 10H);
					USART1_CR3*  = ADDRESS(USART1 + 14H);
					USART1_GTPR* = ADDRESS(USART1 + 18H);
				USART6* = ADDRESS(40011400H);
					USART6_SR*   = ADDRESS(USART6 + 0);
					USART6_DR*   = ADDRESS(USART6 + 4);
					USART6_BRR*  = ADDRESS(USART6 + 8);
					USART6_CR1*  = ADDRESS(USART6 + 0CH);
					USART6_CR2*  = ADDRESS(USART6 + 10H);
					USART6_CR3*  = ADDRESS(USART6 + 14H);
					USART6_GTPR* = ADDRESS(USART6 + 18H);
				ADC1ADC2ADC3* = ADDRESS(40012000H);
					ADC1* = ADC1ADC2ADC3;
						ADC1_SR*     = ADDRESS(ADC1 + 0);
						ADC1_CR1*    = ADDRESS(ADC1 + 4);
						ADC1_CR2*    = ADDRESS(ADC1 + 8);
						ADC1_SMPR1*  = ADDRESS(ADC1 + 0CH);
						ADC1_SMPR2*  = ADDRESS(ADC1 + 10H);
						ADC1_JOFR1*  = ADDRESS(ADC1 + 14H);
						ADC1_JOFR2*  = ADDRESS(ADC1 + 18H);
						ADC1_JOFR3*  = ADDRESS(ADC1 + 1CH);
						ADC1_JOFR4*  = ADDRESS(ADC1 + 20H);
						ADC1_HTR*    = ADDRESS(ADC1 + 24H);
						ADC1_LTR*    = ADDRESS(ADC1 + 28H);
						ADC1_SQR1*   = ADDRESS(ADC1 + 2CH);
						ADC1_SQR2*   = ADDRESS(ADC1 + 30H);
						ADC1_SQR3*   = ADDRESS(ADC1 + 34H);
						ADC1_JSQR*   = ADDRESS(ADC1 + 38H);
						ADC1_JDR1*   = ADDRESS(ADC1 + 3CH);
						ADC1_JDR2*   = ADDRESS(ADC1 + 40H);
						ADC1_JDR3*   = ADDRESS(ADC1 + 44H);
						ADC1_JDR4*   = ADDRESS(ADC1 + 48H);
						ADC1_DR*     = ADDRESS(ADC1 + 4CH);
					ADC2* = ADDRESS(ADC1ADC2ADC3 + 100H);
						ADC2_SR*     = ADDRESS(ADC2 + 0);
						ADC2_CR1*    = ADDRESS(ADC2 + 4);
						ADC2_CR2*    = ADDRESS(ADC2 + 8);
						ADC2_SMPR1*  = ADDRESS(ADC2 + 0CH);
						ADC2_SMPR2*  = ADDRESS(ADC2 + 10H);
						ADC2_JOFR1*  = ADDRESS(ADC2 + 14H);
						ADC2_JOFR2*  = ADDRESS(ADC2 + 18H);
						ADC2_JOFR3*  = ADDRESS(ADC2 + 1CH);
						ADC2_JOFR4*  = ADDRESS(ADC2 + 20H);
						ADC2_HTR*    = ADDRESS(ADC2 + 24H);
						ADC2_LTR*    = ADDRESS(ADC2 + 28H);
						ADC2_SQR1*   = ADDRESS(ADC2 + 2CH);
						ADC2_SQR2*   = ADDRESS(ADC2 + 30H);
						ADC2_SQR3*   = ADDRESS(ADC2 + 34H);
						ADC2_JSQR*   = ADDRESS(ADC2 + 38H);
						ADC2_JDR1*   = ADDRESS(ADC2 + 3CH);
						ADC2_JDR2*   = ADDRESS(ADC2 + 40H);
						ADC2_JDR3*   = ADDRESS(ADC2 + 44H);
						ADC2_JDR4*   = ADDRESS(ADC2 + 48H);
						ADC2_DR*     = ADDRESS(ADC2 + 4CH);
					ADC3* = ADDRESS(ADC1ADC2ADC3 + 200H);
						ADC3_SR*     = ADDRESS(ADC3 + 0);
						ADC3_CR1*    = ADDRESS(ADC3 + 4);
						ADC3_CR2*    = ADDRESS(ADC3 + 8);
						ADC3_SMPR1*  = ADDRESS(ADC3 + 0CH);
						ADC3_SMPR2*  = ADDRESS(ADC3 + 10H);
						ADC3_JOFR1*  = ADDRESS(ADC3 + 14H);
						ADC3_JOFR2*  = ADDRESS(ADC3 + 18H);
						ADC3_JOFR3*  = ADDRESS(ADC3 + 1CH);
						ADC3_JOFR4*  = ADDRESS(ADC3 + 20H);
						ADC3_HTR*    = ADDRESS(ADC3 + 24H);
						ADC3_LTR*    = ADDRESS(ADC3 + 28H);
						ADC3_SQR1*   = ADDRESS(ADC3 + 2CH);
						ADC3_SQR2*   = ADDRESS(ADC3 + 30H);
						ADC3_SQR3*   = ADDRESS(ADC3 + 34H);
						ADC3_JSQR*   = ADDRESS(ADC3 + 38H);
						ADC3_JDR1*   = ADDRESS(ADC3 + 3CH);
						ADC3_JDR2*   = ADDRESS(ADC3 + 40H);
						ADC3_JDR3*   = ADDRESS(ADC3 + 44H);
						ADC3_JDR4*   = ADDRESS(ADC3 + 48H);
						ADC3_DR*     = ADDRESS(ADC3 + 4CH);
					ADCCommon* = ADDRESS(ADC1ADC2ADC3 + 300H);
						ADC_CSR* = ADDRESS(ADCCommon + 0);
						ADC_CCR* = ADDRESS(ADCCommon + 4);
						ADC_CDR* = ADDRESS(ADCCommon + 8);
				SDIO* = ADDRESS(40012C00H);
					SDIO_POWER*  = ADDRESS(SDIO + 0);
					SDIO_CLKCR*  = ADDRESS(SDIO + 4);
					SDIO_ARG*    = ADDRESS(SDIO + 8);
					SDIO_CMD*    = ADDRESS(SDIO + 0CH);
					SDIO_RESPCMD*= ADDRESS(SDIO + 10H);
					SDIO_RESP1*  = ADDRESS(SDIO + 14H);
					SDIO_RESP2*  = ADDRESS(SDIO + 18H);
					SDIO_RESP3*  = ADDRESS(SDIO + 1CH);
					SDIO_RESP4*  = ADDRESS(SDIO + 20H);
					SDIO_DTIMER* = ADDRESS(SDIO + 24H);
					SDIO_DLEN*   = ADDRESS(SDIO + 28H);
					SDIO_DCTRL*  = ADDRESS(SDIO + 2CH);
					SDIO_DCOUNT* = ADDRESS(SDIO + 30H);
					SDIO_STA*    = ADDRESS(SDIO + 34H);
					SDIO_ICR*    = ADDRESS(SDIO + 38H);
					SDIO_MASK*   = ADDRESS(SDIO + 3CH);
					SDIO_FIFOCNT*= ADDRESS(SDIO + 48H);
					SDIO_FIFO*   = ADDRESS(SDIO + 80H);
				SPI1* = ADDRESS(40013000H); I2S1* = SPI1;
					SPI1_CR1*    = ADDRESS(SPI1 + 0);
					SPI1_CR2*    = ADDRESS(SPI1 + 4);
					SPI1_SR*     = ADDRESS(SPI1 + 8);
					SPI1_DR*     = ADDRESS(SPI1 + 0CH);
					SPI1_CRCPR*  = ADDRESS(SPI1 + 10H);
					SPI1_RXCRCR* = ADDRESS(SPI1 + 14H);
					SPI1_TXCRCR* = ADDRESS(SPI1 + 18H);
					SPI1_I2SCFGR*= ADDRESS(SPI1 + 1CH);
					SPI1_I2SPR*  = ADDRESS(SPI1 + 20H);
				SPI4* = ADDRESS(40013400H); I2S4* = SPI4;
					SPI4_CR1*    = ADDRESS(SPI4 + 0);
					SPI4_CR2*    = ADDRESS(SPI4 + 4);
					SPI4_SR*     = ADDRESS(SPI4 + 8);
					SPI4_DR*     = ADDRESS(SPI4 + 0CH);
					SPI4_CRCPR*  = ADDRESS(SPI4 + 10H);
					SPI4_RXCRCR* = ADDRESS(SPI4 + 14H);
					SPI4_TXCRCR* = ADDRESS(SPI4 + 18H);
					SPI4_I2SCFGR*= ADDRESS(SPI4 + 1CH);
					SPI4_I2SPR*  = ADDRESS(SPI4 + 20H);
				SYSCFG* = ADDRESS(40013800H);
					SYSCFG_MEMRMP*   = ADDRESS(SYSCFG + 0);
					SYSCFG_PMC*      = ADDRESS(SYSCFG + 4);
					SYSCFG_EXTICR1*  = ADDRESS(SYSCFG + 8);
					SYSCFG_EXTICR2*  = ADDRESS(SYSCFG + 0CH);
					SYSCFG_EXTICR3*  = ADDRESS(SYSCFG + 10H);
					SYSCFG_EXTICR4*  = ADDRESS(SYSCFG + 14H);
					SYSCFG_CMPCR*    = ADDRESS(SYSCFG + 20H);
					SYSCFG_CFGR*     = ADDRESS(SYSCFG + 2CH);
				EXTI* = ADDRESS(40013C00H);
					EXTI_IMR*    = ADDRESS(EXTI + 0);
					EXTI_EMR*    = ADDRESS(EXTI + 4);
					EXTI_RTSR*   = ADDRESS(EXTI + 8);
					EXTI_FTSR*   = ADDRESS(EXTI + 0CH);
					EXTI_SWIER*  = ADDRESS(EXTI + 10H);
					EXTI_PR*     = ADDRESS(EXTI + 14H);
				TIM9* = ADDRESS(40014000H);
					TIM9_CR1*    = ADDRESS(TIM9 + 0);
					TIM9_SMCR*   = ADDRESS(TIM9 + 8);
					TIM9_DIER*   = ADDRESS(TIM9 + 0CH);
					TIM9_SR*     = ADDRESS(TIM9 + 10H);
					TIM9_EGR*    = ADDRESS(TIM9 + 14H);
					TIM9_CCMR1*  = ADDRESS(TIM9 + 18H);
					TIM9_CCER*   = ADDRESS(TIM9 + 20H);
					TIM9_CNT*    = ADDRESS(TIM9 + 24H);
					TIM9_PSC*    = ADDRESS(TIM9 + 28H);
					TIM9_ARR*    = ADDRESS(TIM9 + 2CH);
					TIM9_CCR1*   = ADDRESS(TIM9 + 34H);
					TIM9_CCR2*   = ADDRESS(TIM9 + 38H);
				TIM10* = ADDRESS(40014400H);
					TIM10_CR1*   = ADDRESS(TIM10 + 0);
					TIM10_SMCR*  = ADDRESS(TIM10 + 8);
					TIM10_DIER*  = ADDRESS(TIM10 + 0CH);
					TIM10_SR*    = ADDRESS(TIM10 + 10H);
					TIM10_EGR*   = ADDRESS(TIM10 + 14H);
					TIM10_CCMR1* = ADDRESS(TIM10 + 18H);
					TIM10_CCER*  = ADDRESS(TIM10 + 20H);
					TIM10_CNT*   = ADDRESS(TIM10 + 24H);
					TIM10_PSC*   = ADDRESS(TIM10 + 28H);
					TIM10_ARR*   = ADDRESS(TIM10 + 2CH);
					TIM10_CCR1*  = ADDRESS(TIM10 + 34H);
					TIM10_OR*    = ADDRESS(TIM10 + 50H);
				TIM11* = ADDRESS(40014800H);
					TIM11_CR1*   = ADDRESS(TIM11 + 0);
					TIM11_SMCR*  = ADDRESS(TIM11 + 8);
					TIM11_DIER*  = ADDRESS(TIM11 + 0CH);
					TIM11_SR*    = ADDRESS(TIM11 + 10H);
					TIM11_EGR*   = ADDRESS(TIM11 + 14H);
					TIM11_CCMR1* = ADDRESS(TIM11 + 18H);
					TIM11_CCER*  = ADDRESS(TIM11 + 20H);
					TIM11_CNT*   = ADDRESS(TIM11 + 24H);
					TIM11_PSC*   = ADDRESS(TIM11 + 28H);
					TIM11_ARR*   = ADDRESS(TIM11 + 2CH);
					TIM11_CCR1*  = ADDRESS(TIM11 + 34H);
					TIM11_OR*    = ADDRESS(TIM11 + 50H);
				SPI5* = ADDRESS(40015000H); I2S5* = SPI5;
					SPI5_CR1*    = ADDRESS(SPI5 + 0);
					SPI5_CR2*    = ADDRESS(SPI5 + 4);
					SPI5_SR*     = ADDRESS(SPI5 + 8);
					SPI5_DR*     = ADDRESS(SPI5 + 0CH);
					SPI5_CRCPR*  = ADDRESS(SPI5 + 10H);
					SPI5_RXCRCR* = ADDRESS(SPI5 + 14H);
					SPI5_TXCRCR* = ADDRESS(SPI5 + 18H);
					SPI5_I2SCFGR*= ADDRESS(SPI5 + 1CH);
					SPI5_I2SPR*  = ADDRESS(SPI5 + 20H);
				SPI6* = ADDRESS(40015400H);
					SPI6_CR1*    = ADDRESS(SPI6 + 0);
					SPI6_CR2*    = ADDRESS(SPI6 + 4);
					SPI6_SR*     = ADDRESS(SPI6 + 8);
					SPI6_DR*     = ADDRESS(SPI6 + 0CH);
					SPI6_CRCPR*  = ADDRESS(SPI6 + 10H);
					SPI6_RXCRCR* = ADDRESS(SPI6 + 14H);
					SPI6_TXCRCR* = ADDRESS(SPI6 + 18H);
					SPI6_I2SCFGR*= ADDRESS(SPI6 + 1CH);
					SPI6_I2SPR*  = ADDRESS(SPI6 + 20H);
				SAI1* = ADDRESS(40015800H);
				SAI2* = ADDRESS(40015C00H);
				LTDC* = ADDRESS(40016800H);
			(* AHB1 *)
				GPIOA* = ADDRESS(40020000H);
					GPIOA_MODER*     = ADDRESS(GPIOA + 0);
					GPIOA_OTYPER*    = ADDRESS(GPIOA + 4);
					GPIOA_OSPEEDR*   = ADDRESS(GPIOA + 8);
					GPIOA_PUPDR*     = ADDRESS(GPIOA + 0CH);
					GPIOA_IDR*       = ADDRESS(GPIOA + 10H);
					GPIOA_ODR*       = ADDRESS(GPIOA + 14H);
					GPIOA_BSRR*      = ADDRESS(GPIOA + 18H);
					GPIOA_LCKR*      = ADDRESS(GPIOA + 1CH);
					GPIOA_AFRL*      = ADDRESS(GPIOA + 20H);
					GPIOA_AFRH*      = ADDRESS(GPIOA + 24H);
				GPIOB* = ADDRESS(40020400H);
					GPIOB_MODER*     = ADDRESS(GPIOB + 0);
					GPIOB_OTYPER*    = ADDRESS(GPIOB + 4);
					GPIOB_OSPEEDR*   = ADDRESS(GPIOB + 8);
					GPIOB_PUPDR*     = ADDRESS(GPIOB + 0CH);
					GPIOB_IDR*       = ADDRESS(GPIOB + 10H);
					GPIOB_ODR*       = ADDRESS(GPIOB + 14H);
					GPIOB_BSRR*      = ADDRESS(GPIOB + 18H);
					GPIOB_LCKR*      = ADDRESS(GPIOB + 1CH);
					GPIOB_AFRL*      = ADDRESS(GPIOB + 20H);
					GPIOB_AFRH*      = ADDRESS(GPIOB + 24H);
				GPIOC* = ADDRESS(40020800H);
					GPIOC_MODER*     = ADDRESS(GPIOC + 0);
					GPIOC_OTYPER*    = ADDRESS(GPIOC + 4);
					GPIOC_OSPEEDR*   = ADDRESS(GPIOC + 8);
					GPIOC_PUPDR*     = ADDRESS(GPIOC + 0CH);
					GPIOC_IDR*       = ADDRESS(GPIOC + 10H);
					GPIOC_ODR*       = ADDRESS(GPIOC + 14H);
					GPIOC_BSRR*      = ADDRESS(GPIOC + 18H);
					GPIOC_LCKR*      = ADDRESS(GPIOC + 1CH);
					GPIOC_AFRL*      = ADDRESS(GPIOC + 20H);
					GPIOC_AFRH*      = ADDRESS(GPIOC + 24H);
				GPIOD* = ADDRESS(40020C00H);
					GPIOD_MODER*     = ADDRESS(GPIOD + 0);
					GPIOD_OTYPER*    = ADDRESS(GPIOD + 4);
					GPIOD_OSPEEDR*   = ADDRESS(GPIOD + 8);
					GPIOD_PUPDR*     = ADDRESS(GPIOD + 0CH);
					GPIOD_IDR*       = ADDRESS(GPIOD + 10H);
					GPIOD_ODR*       = ADDRESS(GPIOD + 14H);
					GPIOD_BSRR*      = ADDRESS(GPIOD + 18H);
					GPIOD_LCKR*      = ADDRESS(GPIOD + 1CH);
					GPIOD_AFRL*      = ADDRESS(GPIOD + 20H);
					GPIOD_AFRH*      = ADDRESS(GPIOD + 24H);
				GPIOE* = ADDRESS(40021000H);
					GPIOE_MODER*     = ADDRESS(GPIOE + 0);
					GPIOE_OTYPER*    = ADDRESS(GPIOE + 4);
					GPIOE_OSPEEDR*   = ADDRESS(GPIOE + 8);
					GPIOE_PUPDR*     = ADDRESS(GPIOE + 0CH);
					GPIOE_IDR*       = ADDRESS(GPIOE + 10H);
					GPIOE_ODR*       = ADDRESS(GPIOE + 14H);
					GPIOE_BSRR*      = ADDRESS(GPIOE + 18H);
					GPIOE_LCKR*      = ADDRESS(GPIOE + 1CH);
					GPIOE_AFRL*      = ADDRESS(GPIOE + 20H);
					GPIOE_AFRH*      = ADDRESS(GPIOE + 24H);
				GPIOF* = ADDRESS(40021400H);
					GPIOF_MODER*     = ADDRESS(GPIOF + 0);
					GPIOF_OTYPER*    = ADDRESS(GPIOF + 4);
					GPIOF_OSPEEDR*   = ADDRESS(GPIOF + 8);
					GPIOF_PUPDR*     = ADDRESS(GPIOF + 0CH);
					GPIOF_IDR*       = ADDRESS(GPIOF + 10H);
					GPIOF_ODR*       = ADDRESS(GPIOF + 14H);
					GPIOF_BSRR*      = ADDRESS(GPIOF + 18H);
					GPIOF_LCKR*      = ADDRESS(GPIOF + 1CH);
					GPIOF_AFRL*      = ADDRESS(GPIOF + 20H);
					GPIOF_AFRH*      = ADDRESS(GPIOF + 24H);
				GPIOG* = ADDRESS(40021800H);
					GPIOG_MODER*     = ADDRESS(GPIOG + 0);
					GPIOG_OTYPER*    = ADDRESS(GPIOG + 4);
					GPIOG_OSPEEDR*   = ADDRESS(GPIOG + 8);
					GPIOG_PUPDR*     = ADDRESS(GPIOG + 0CH);
					GPIOG_IDR*       = ADDRESS(GPIOG + 10H);
					GPIOG_ODR*       = ADDRESS(GPIOG + 14H);
					GPIOG_BSRR*      = ADDRESS(GPIOG + 18H);
					GPIOG_LCKR*      = ADDRESS(GPIOG + 1CH);
					GPIOG_AFRL*      = ADDRESS(GPIOG + 20H);
					GPIOG_AFRH*      = ADDRESS(GPIOG + 24H);
				GPIOH* = ADDRESS(40021C00H);
					GPIOH_MODER*     = ADDRESS(GPIOH + 0);
					GPIOH_OTYPER*    = ADDRESS(GPIOH + 4);
					GPIOH_OSPEEDR*   = ADDRESS(GPIOH + 8);
					GPIOH_PUPDR*     = ADDRESS(GPIOH + 0CH);
					GPIOH_IDR*       = ADDRESS(GPIOH + 10H);
					GPIOH_ODR*       = ADDRESS(GPIOH + 14H);
					GPIOH_BSRR*      = ADDRESS(GPIOH + 18H);
					GPIOH_LCKR*      = ADDRESS(GPIOH + 1CH);
					GPIOH_AFRL*      = ADDRESS(GPIOH + 20H);
					GPIOH_AFRH*      = ADDRESS(GPIOH + 24H);
				GPIOI* = ADDRESS(40022000H);
					GPIOI_MODER*     = ADDRESS(GPIOI + 0);
					GPIOI_OTYPER*    = ADDRESS(GPIOI + 4);
					GPIOI_OSPEEDR*   = ADDRESS(GPIOI + 8);
					GPIOI_PUPDR*     = ADDRESS(GPIOI + 0CH);
					GPIOI_IDR*       = ADDRESS(GPIOI + 10H);
					GPIOI_ODR*       = ADDRESS(GPIOI + 14H);
					GPIOI_BSRR*      = ADDRESS(GPIOI + 18H);
					GPIOI_LCKR*      = ADDRESS(GPIOI + 1CH);
					GPIOI_AFRL*      = ADDRESS(GPIOI + 20H);
					GPIOI_AFRH*      = ADDRESS(GPIOI + 24H);
				GPIOJ* = ADDRESS(40022400H);
					GPIOJ_MODER*     = ADDRESS(GPIOJ + 0);
					GPIOJ_OTYPER*    = ADDRESS(GPIOJ + 4);
					GPIOJ_OSPEEDR*   = ADDRESS(GPIOJ + 8);
					GPIOJ_PUPDR*     = ADDRESS(GPIOJ + 0CH);
					GPIOJ_IDR*       = ADDRESS(GPIOJ + 10H);
					GPIOJ_ODR*       = ADDRESS(GPIOJ + 14H);
					GPIOJ_BSRR*      = ADDRESS(GPIOJ + 18H);
					GPIOJ_LCKR*      = ADDRESS(GPIOJ + 1CH);
					GPIOJ_AFRL*      = ADDRESS(GPIOJ + 20H);
					GPIOJ_AFRH*      = ADDRESS(GPIOJ + 24H);
				GPIOK* = ADDRESS(40022800H);
					GPIOK_MODER*     = ADDRESS(GPIOK + 0);
					GPIOK_OTYPER*    = ADDRESS(GPIOK + 4);
					GPIOK_OSPEEDR*   = ADDRESS(GPIOK + 8);
					GPIOK_PUPDR*     = ADDRESS(GPIOK + 0CH);
					GPIOK_IDR*       = ADDRESS(GPIOK + 10H);
					GPIOK_ODR*       = ADDRESS(GPIOK + 14H);
					GPIOK_BSRR*      = ADDRESS(GPIOK + 18H);
					GPIOK_LCKR*      = ADDRESS(GPIOK + 1CH);
					GPIOK_AFRL*      = ADDRESS(GPIOK + 20H);
					GPIOK_AFRH*      = ADDRESS(GPIOK + 24H);
				CRC* = ADDRESS(40023000H);
					CRC_DR*  = ADDRESS(CRC + 0);
					CRC_IDR* = ADDRESS(CRC + 4);
					CRC_CR*  = ADDRESS(CRC + 8);
				RCC* = ADDRESS(40023800H);
					RCC_CR*          = ADDRESS(RCC + 0);
					RCC_PLLCFGR*     = ADDRESS(RCC + 4);
					RCC_CFGR*        = ADDRESS(RCC + 8);
					RCC_CIR*         = ADDRESS(RCC + 0CH);
					RCC_AHB1RSTR*    = ADDRESS(RCC + 10H);
					RCC_AHB2RSTR*    = ADDRESS(RCC + 14H);
					RCC_AHB3RSTR*    = ADDRESS(RCC + 18H);
					RCC_APB1RSTR*    = ADDRESS(RCC + 20H);
					RCC_APB2RSTR*    = ADDRESS(RCC + 24H);
					RCC_AHB1ENR*     = ADDRESS(RCC + 30H);
					RCC_AHB2ENR*     = ADDRESS(RCC + 34H);
					RCC_AHB3ENR*     = ADDRESS(RCC + 38H);
					RCC_APB1ENR*     = ADDRESS(RCC + 40H);
					RCC_APB2ENR*     = ADDRESS(RCC + 44H);
					RCC_AHB1LPENR*   = ADDRESS(RCC + 50H);
					RCC_AHB2LPENR*   = ADDRESS(RCC + 54H);
					RCC_AHB3LPENR*   = ADDRESS(RCC + 58H);
					RCC_APB1LPENR*   = ADDRESS(RCC + 60H);
					RCC_APB2LPENR*   = ADDRESS(RCC + 64H);
					RCC_BDCR*        = ADDRESS(RCC + 70H);
					RCC_CSR*         = ADDRESS(RCC + 74H);
					RCC_SSCGR*       = ADDRESS(RCC + 80H);
					RCC_PLLI2SCFGR*  = ADDRESS(RCC + 84H);
					RCC_PLLSAICFGR*  = ADDRESS(RCC + 88H);
					RCC_DCKCFGR*     = ADDRESS(RCC + 8CH);
					RCC_CKGATENR*    = ADDRESS(RCC + 90H);
					RCC_DCKCFGR2*    = ADDRESS(RCC + 94H);
				FlashInterface* = ADDRESS(40023C00H); (* Flash interface register *)
					FLASH_ACR*       = ADDRESS(FlashInterface + 0);
					FLASH_KEYR*      = ADDRESS(FlashInterface + 4);
					FLASH_OPTKEYR*   = ADDRESS(FlashInterface + 8);
					FLASH_SR*        = ADDRESS(FlashInterface + 0CH);
					FLASH_CR*        = ADDRESS(FlashInterface + 10H);
					FLASH_OPTCR*     = ADDRESS(FlashInterface + 14H);
				BKPSRAM*    = ADDRESS(40024000H);
				DMA1*       = ADDRESS(40026000H);
				DMA2*       = ADDRESS(40026400H);
				ETHERNETMAC*= ADDRESS(40028000H);
				DMA2D*      = ADDRESS(4002B000H);
				USBOTGHS*   = ADDRESS(40040000H);
			(* AHB2 *)
				USBOTGFS*   = ADDRESS(50000000H);
				DCMI*       = ADDRESS(50050000H);
				CRYP*       = ADDRESS(50060000H);
				HASH*       = ADDRESS(50060400H);
				RNG* = ADDRESS(50060800H);
					RNG_CR* = ADDRESS(RNG);
					RNG_SR* = ADDRESS(RNG + 4);
					RNG_DR* = ADDRESS(RNG + 8);
			(* AHB3 *)
				FSMCControlRegister*= ADDRESS(0A0000000H);
				QUADSPIRegister*    = ADDRESS(0A0001000H);
			DBGMCU* = ADDRESS(0E0042000H);
				DBGMCU_IDCODE*   = ADDRESS(DBGMCU + 0);
				DBGMCU_CR*       = ADDRESS(DBGMCU + 4);
				DBGMCU_APB1FZ*   = ADDRESS(DBGMCU + 8);
				DBGMCU_APB2FZ*   = ADDRESS(DBGMCU + 0CH);
		(* interrupt sources *)
        (* TODO: Can be removed? *)
			WWDGInt* = 0;
			PVDInt* = 1; EXTI16Int* = 1;
			TAMPSTAMPInt* = 2; EXTI21Int* = 2;
			RTCWKUPInt* = 3; EXTI22Int* = 3;
			FLASHInt* = 4;
			RCCInt* = 5;
			EXTI0Int* = 6;
			EXTI1Int* = 7;
			EXTI2Int* = 8;
			EXTI3Int* = 9;
			EXTI4Int* = 10;
			DMA1Stream0Int* = 11;
			DMA1Stream1Int* = 12;
			DMA1Stream2Int* = 13;
			DMA1Stream3Int* = 14;
			DMA1Stream4Int* = 15;
			DMA1Stream5Int* = 16;
			DMA1Stream6Int* = 17;
			ADCInt* = 18;
			CAN1TXInt* = 19;
			CAN1RX0Int* = 20;
			CAN1RX1Int* = 21;
			CAN1SCEInt* = 22;
			EXTI95Int* = 23;
			TIM1BRKTIM9Int* = 24;
			TIM1UPTIM10Int* = 25;
			TIM1TRGCOMTIM11Int* = 26;
			TIM1CCInt* = 27;
			TIM2Int* = 28;
			TIM3Int* = 29;
			TIM4Int* = 30;
			I2C1EVInt* = 31;
			I2C1ERInt* = 32;
			I2C2EVInt* = 33;
			I2C2ERInt* = 34;
			SPI1Int* = 35;
			SPI2Int* = 36;
			USART1Int* = 37;
			USART2Int* = 38;
			USART3Int* = 39;
			EXTI1510Int* = 40;
			RTCAlarmInt* = 41; EXTI17Int* = 41;
			OTGFSWKUPInt* = 42; EXTI18Int* = 42;
			TIM8BRKTIM12Int* = 43;
			TIM8UPTIM13Int* = 44;
			TIM8TRGCOMTIM14Int* = 45;
			TIM8CCInt* = 46;
			DMA1Stream7Int* = 47;
			FSMCInt* = 48;
			SDIOInt* = 49;
			TIM5Int* = 50;
			SPI3Int* = 51;
			UART4Int* = 52;
			UART5Int* = 53;
			TIM6DACInt* = 54;
			TIM7Int* = 55;
			DMA2Stream0Int* = 56;
			DMA2Stream1Int* = 57;
			DMA2Stream2Int* = 58;
			DMA2Stream3Int* = 59;
			DMA2Stream4Int* = 60;
			ETHInt* = 61;
			ETHWKUPInt* = 62;
			CAN2TXInt* = 63;
			CAN2RX0Int* = 64;
			CAN2RX1Int* = 65;
			CAN2SCEInt* = 66;
			OTGFSInt* = 67;
			DMA2Stream5Int* = 68;
			DMA2Stream6Int* = 69;
			DMA2Stream7Int* = 70;
			USART6Int* = 71;
			I2C3EVInt* = 72;
			I2C3ERInt* = 73;
			OTGHSEP1OUTInt* = 74;
			OTGHSEP1INInt* = 75;
			OTGHSWKUPInt* = 76;
			OTGHSInt* = 77;
			DCMIInt* = 78;
			CRYPInt* = 79;
			HASHRNGInt* = 80;
			FPUInt* = 81;
			SPI4Int* = 84;
			SPI5Int* = 85;
			SAI1Int* = 87;
			SAI2Int* = 91;
			QuadSPIInt* = 92;
			HDMICECInt* = 93;
			SPDIFRxInt* = 94;
			FMPI2C1Int* = 95;
			FMPI2C1ErrorInt* = 96;

END STM32F4.
