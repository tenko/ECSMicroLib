MODULE STM32L4 IN Micro;

	(*
		Alexander Shiryaev, 2015.02, 2015.07, 2016.10, 2017.10, 2018.05, 2021.08
        Modified by Tenko for use with ECS

        RM0394, Reference manual,
            STM32L41xxx/42xxx/43xxx/44xxx/45xxx/46xxx

        RM0351, Reference manual,
            STM32L47xxx, STM32L48xxx, STM32L49xxx and STM32L4Axxx
	*)
    IMPORT SYSTEM;

    TYPE ADDRESS = SYSTEM.ADDRESS;

    CONST
		(* memory map *)
			BootStart* = ADDRESS(0H);
			FlashStart* = ADDRESS(8000000H);
			SystemMemory* = ADDRESS(1FFF0000H); (* 28 KiB *)
			OTPArea* = ADDRESS(1FFF7000H); (* 1 KiB *)
			(* device electronic signature *)
				(* Unique device ID register (96 bits) *)
					UID* = ADDRESS(1FFF7590H); (* 12 B *)
						UID0* = ADDRESS(UID + 0);
						UID1* = ADDRESS(UID0 + 4);
						UID2* =ADDRESS( UID1 + 4);
				(* Flash size, in KiB *)
					FlashSizeKiBAdr* = ADDRESS(1FFF75E0H); (* 2 B *)
			OptionBytes* = ADDRESS(1FFF7800H); (* 16 B *)
			(* APB1 *)
				TIM2* = ADDRESS(40000000H);
					TIM2CR1*    = ADDRESS(TIM2 + 0);
					TIM2CR2*    = ADDRESS(TIM2 + 4);
					TIM2SMCR*   = ADDRESS(TIM2 + 8);
					TIM2DIER*   = ADDRESS(TIM2 + 0CH);
					TIM2SR*     = ADDRESS(TIM2 + 10H);
					TIM2EGR*    = ADDRESS(TIM2 + 14H);
					TIM2CCMR1*  = ADDRESS(TIM2 + 18H);
					TIM2CCMR2*  = ADDRESS(TIM2 + 1CH);
					TIM2CCER*   = ADDRESS(TIM2 + 20H);
					TIM2CNT*    = ADDRESS(TIM2 + 24H);
					TIM2PSC*    = ADDRESS(TIM2 + 28H);
					TIM2ARR*    = ADDRESS(TIM2 + 2CH);
					TIM2CCR1*   = ADDRESS(TIM2 + 34H);
					TIM2CCR2*   = ADDRESS(TIM2 + 38H);
					TIM2CCR3*   = ADDRESS(TIM2 + 3CH);
					TIM2CCR4*   = ADDRESS(TIM2 + 40H);
					TIM2DCR*    = ADDRESS(TIM2 + 48H);
					TIM2DMAR*   = ADDRESS(TIM2 + 4CH);
					TIM2OR1*    = ADDRESS(TIM2 + 50H);
					TIM2OR2*    = ADDRESS(TIM2 + 60H);
                TIM3* = ADDRESS(40000400H);
					TIM3CR1*    = ADDRESS(TIM3 + 0);
					TIM3CR2*    = ADDRESS(TIM3 + 4);
					TIM3SMCR*   = ADDRESS(TIM3 + 8);
					TIM3DIER*   = ADDRESS(TIM3 + 0CH);
					TIM3SR*     = ADDRESS(TIM3 + 10H);
					TIM3EGR*    = ADDRESS(TIM3 + 14H);
					TIM3CCMR1*  = ADDRESS(TIM3 + 18H);
					TIM3CCMR2*  = ADDRESS(TIM3 + 1CH);
					TIM3CCER*   = ADDRESS(TIM3 + 20H);
					TIM3CNT*    = ADDRESS(TIM3 + 24H);
					TIM3PSC*    = ADDRESS(TIM3 + 28H);
					TIM3ARR*    = ADDRESS(TIM3 + 2CH);
					TIM3CCR1*   = ADDRESS(TIM3 + 34H);
					TIM3CCR2*   = ADDRESS(TIM3 + 38H);
					TIM3CCR3*   = ADDRESS(TIM3 + 3CH);
					TIM3CCR4*   = ADDRESS(TIM3 + 40H);
					TIM3DCR*    = ADDRESS(TIM3 + 48H);
					TIM3DMAR*   = ADDRESS(TIM3 + 4CH);
                TIM6* = ADDRESS(40001000H);
					TIM6CR1*    = ADDRESS(TIM6 + 0);
					TIM6CR2*    = ADDRESS(TIM6 + 4);
					TIM6DIER*   = ADDRESS(TIM6 + 0CH);
					TIM6SR*     = ADDRESS(TIM6 + 10H);
					TIM6EGR*    = ADDRESS(TIM6 + 14H);
					TIM6CNT*    = ADDRESS(TIM6 + 24H);
					TIM6PSC*    = ADDRESS(TIM6 + 28H);
					TIM6ARR*    = ADDRESS(TIM6 + 2CH);
                TIM7* = ADDRESS(40001400H);
					TIM7CR1*    = ADDRESS(TIM7 + 0);
					TIM7CR2*    = ADDRESS(TIM7 + 4);
					TIM7DIER*   = ADDRESS(TIM7 + 0CH);
					TIM7SR*     = ADDRESS(TIM7 + 10H);
					TIM7EGR*    = ADDRESS(TIM7 + 14H);
					TIM7CNT*    = ADDRESS(TIM7 + 24H);
					TIM7PSC*    = ADDRESS(TIM7 + 28H);
					TIM7ARR*    = ADDRESS(TIM7 + 2CH);
                LCD* = ADDRESS(40002400H);
                RTCBKPRegisters* = ADDRESS(40002850H);
                WWDG* = ADDRESS(40002C00H);
					WWDGCR*     = ADDRESS(WWDG + 0);
					WWDGCFR*    = ADDRESS(WWDG + 4);
					WWDGSR*     = ADDRESS(WWDG + 8);
				IWDG* = ADDRESS(40003000H);
					IWDGKR*     = ADDRESS(IWDG + 0);
					IWDGPR*     = ADDRESS(IWDG + 4);
					IWDGRLR*    = ADDRESS(IWDG + 8);
					IWDGSR*     = ADDRESS(IWDG + 0CH);
					IWDWINR*    = ADDRESS(IWDG + 10H);
                SPI2* = ADDRESS(40003800H); I2S2* = SPI2;
					SPI2CR1*    = ADDRESS(SPI2 + 0);
					SPI2CR2*    = ADDRESS(SPI2 + 4);
					SPI2SR*     = ADDRESS(SPI2 + 8);
					SPI2DR*     = ADDRESS(SPI2 + 0CH);
					SPI2CRCPR*  = ADDRESS(SPI2 + 10H);
					SPI2RXCRCR* = ADDRESS(SPI2 + 14H);
					SPI2TXCRCR* = ADDRESS(SPI2 + 18H);
					SPI2I2SCFGR*= ADDRESS(SPI2 + 1CH);
					SPI2I2SPR*  = ADDRESS(SPI2 + 20H);
				SPI3* = ADDRESS(40003C00H); I2S3* = SPI3;
					SPI3CR1*    = ADDRESS(SPI3 + 0);
					SPI3CR2*    = ADDRESS(SPI3 + 4);
					SPI3SR*     = ADDRESS(SPI3 + 8);
					SPI3DR*     = ADDRESS(SPI3 + 0CH);
					SPI3CRCPR*  = ADDRESS(SPI3 + 10H);
					SPI3RXCRCR* = ADDRESS(SPI3 + 14H);
					SPI3TXCRCR* = ADDRESS(SPI3 + 18H);
					SPI3I2SCFGR*= ADDRESS(SPI3 + 1CH);
					SPI3I2SPR*  = ADDRESS(SPI3 + 20H);
                USART2* = ADDRESS(40004400H);
					USART2SR*   = ADDRESS(USART2 + 0);
					USART2DR*   = ADDRESS(USART2 + 4);
					USART2BRR*  = ADDRESS(USART2 + 8);
					USART2CR1*  = ADDRESS(USART2 + 0CH);
					USART2CR2*  = ADDRESS(USART2 + 10H);
					USART2CR3*  = ADDRESS(USART2 + 14H);
					USART2GTPR* = ADDRESS(USART2 + 18H);
				USART3* = ADDRESS(40004800H);
					USART3SR*   = ADDRESS(USART3 + 0);
					USART3DR*   = ADDRESS(USART3 + 4);
					USART3BRR*  = ADDRESS(USART3 + 8);
					USART3CR1*  = ADDRESS(USART3 + 0CH);
					USART3CR2*  = ADDRESS(USART3 + 10H);
					USART3CR3*  = ADDRESS(USART3 + 14H);
					USART3GTPR* = ADDRESS(USART3 + 18H);
                UART4* = ADDRESS(40004C00H);
					USART4SR*   = ADDRESS(UART4 + 0);
					USART4DR*   = ADDRESS(UART4 + 4);
					USART4BRR*  = ADDRESS(UART4 + 8);
					USART4CR1*  = ADDRESS(UART4 + 0CH);
					USART4CR2*  = ADDRESS(UART4 + 10H);
					USART4CR3*  = ADDRESS(UART4 + 14H);
					USART4GTPR* = ADDRESS(UART4 + 18H);
                I2C1* = ADDRESS(40005400H);
					I2C1CR1*    = ADDRESS(I2C1 + 0);
					I2C1CR2*    = ADDRESS(I2C1 + 4);
					I2C1OAR1*   = ADDRESS(I2C1 + 8);
					I2C1OAR2*   = ADDRESS(I2C1 + 0CH);
					I2C1DR*     = ADDRESS(I2C1 + 10H);
					I2C1SR1*    = ADDRESS(I2C1 + 14H);
					I2C1SR2*    = ADDRESS(I2C1 + 18H);
					I2C1CCR*    = ADDRESS(I2C1 + 1CH);
					I2C1TRISE*  = ADDRESS(I2C1 + 20H);
					I2C1FLTR*   = ADDRESS(I2C1 + 24H);
                I2C2* = ADDRESS(40005800H);
					I2C2CR1*    = ADDRESS(I2C2 + 0);
					I2C2CR2*    = ADDRESS(I2C2 + 4);
					I2C2OAR1*   = ADDRESS(I2C2 + 8);
					I2C2OAR2*   = ADDRESS(I2C2 + 0CH);
					I2C2DR*     = ADDRESS(I2C2 + 10H);
					I2C2SR1*    = ADDRESS(I2C2 + 14H);
					I2C2SR2*    = ADDRESS(I2C2 + 18H);
					I2C2CCR*    = ADDRESS(I2C2 + 1CH);
					I2C2TRISE*  = ADDRESS(I2C2 + 20H);
					I2C2FLTR*   = ADDRESS(I2C2 + 24H);
				I2C3* = ADDRESS(40005C00H);
					I2C3CR1*    = (I2C3 + 0);
					I2C3CR2*    = (I2C3 + 4);
					I2C3OAR1*   = (I2C3 + 8);
					I2C3OAR2*   = (I2C3 + 0CH);
					I2C3DR*     = (I2C3 + 10H);
					I2C3SR1*    = (I2C3 + 14H);
					I2C3SR2*    = (I2C3 + 18H);
					I2C3CCR*    = (I2C3 + 1CH);
					I2C3TRISE*  = (I2C3 + 20H);
					I2C3FLTR*   = (I2C3 + 24H);
                CRS* = ADDRESS(40006000H);
                CAN1* = ADDRESS(40006400H);
                USBOTGFS* = ADDRESS(40006400H);
                USBOTGSRAM* = ADDRESS(40006C00H);
                PWR* = ADDRESS(40007000H);
					PWRCR*  = ADDRESS(PWR + 0);
					PWRCSR* = ADDRESS(PWR + 4);
                DAC1* = ADDRESS(40007400H);
					DAC1CR*      = ADDRESS(DAC1 + 0);
					DAC1SWTRIGR* = ADDRESS(DAC1 + 4);
					DAC1DHR12R1* = ADDRESS(DAC1 + 8);
					DAC1DHR12L1* = ADDRESS(DAC1 + 0CH);
					DAC1DHR8R1*  = ADDRESS(DAC1 + 10H);
					DAC1DHR12R2* = ADDRESS(DAC1 + 14H);
					DAC1DHR12L2* = ADDRESS(DAC1 + 18H);
					DAC1DHR8R2*  = ADDRESS(DAC1 + 1CH);
					DAC1DHR12RD* = ADDRESS(DAC1 + 20H);
					DAC1DHR12LD* = ADDRESS(DAC1 + 24H);
					DAC1DHR8RD*  = ADDRESS(DAC1 + 28H);
					DAC1DOR1*    = ADDRESS(DAC1 + 2CH);
					DAC1DOR2*    = ADDRESS(DAC1 + 30H);
					DAC1SR*      = ADDRESS(DAC1 + 34H);
                OPAMP* = ADDRESS(40007800H);
                LPTIM1* = ADDRESS(40007C00H);
                LPUART1* = ADDRESS(40008000H);
                I2C4* = ADDRESS(40008400H);
					I2C4CR1*    = (I2C4 + 0);
					I2C4CR2*    = (I2C4 + 4);
					I2C4OAR1*   = (I2C4 + 8);
					I2C4OAR2*   = (I2C4 + 0CH);
					I2C4DR*     = (I2C4 + 10H);
					I2C4SR1*    = (I2C4 + 14H);
					I2C4SR2*    = (I2C4 + 18H);
					I2C4CCR*    = (I2C4 + 1CH);
					I2C4TRISE*  = (I2C4 + 20H);
					I2C4FLTR*   = (I2C4 + 24H);
                SWPMI1* = ADDRESS(40008800H);
                LPTIM2* = ADDRESS(40009400H);
            (* APB2 *)
                SYSCFG* = ADDRESS(40010000H);
					SYSCFGMEMRMP*   = ADDRESS(SYSCFG + 0);
					SYSCFGPMC*      = ADDRESS(SYSCFG + 4);
					SYSCFGEXTICR1*  = ADDRESS(SYSCFG + 8);
					SYSCFGEXTICR2*  = ADDRESS(SYSCFG + 0CH);
					SYSCFGEXTICR3*  = ADDRESS(SYSCFG + 10H);
					SYSCFGEXTICR4*  = ADDRESS(SYSCFG + 14H);
					SYSCFGCMPCR*    = ADDRESS(SYSCFG + 20H);
					SYSCFGCFGR*     = ADDRESS(SYSCFG + 2CH);
                VREFBUF* = ADDRESS(40010030H);
                COMP* = ADDRESS(40010200H);
                EXTI* = ADDRESS(40010400H);
					EXTIIMR*    = ADDRESS(EXTI + 0);
					EXTIEMR*    = ADDRESS(EXTI + 4);
					EXTIRTSR*   = ADDRESS(EXTI + 8);
					EXTIFTSR*   = ADDRESS(EXTI + 0CH);
					EXTISWIER*  = ADDRESS(EXTI + 10H);
					EXTIPR*     = ADDRESS(EXTI + 14H);
                FIREWALL* = ADDRESS(40011C00H);
                SDMMC* = ADDRESS(40012800H);
                TIM1* = ADDRESS(40012C00H);
					TIM1CR1*    = ADDRESS(TIM1 + 0);
					TIM1CR2*    = ADDRESS(TIM1 + 4);
					TIM1SMCR*   = ADDRESS(TIM1 + 8);
					TIM1DIER*   = ADDRESS(TIM1 + 0CH);
					TIM1SR*     = ADDRESS(TIM1 + 10H);
					TIM1EGR*    = ADDRESS(TIM1 + 14H);
					TIM1CCMR1*  = ADDRESS(TIM1 + 18H);
					TIM1CCMR2*  = ADDRESS(TIM1 + 1CH);
					TIM1CCER*   = ADDRESS(TIM1 + 20H);
					TIM1CNT*    = ADDRESS(TIM1 + 24H);
					TIM1PSC*    = ADDRESS(TIM1 + 28H);
					TIM1ARR*    = ADDRESS(TIM1 + 2CH);
					TIM1RCR*    = ADDRESS(TIM1 + 30H);
					TIM1CCR1*   = ADDRESS(TIM1 + 34H);
					TIM1CCR2*   = ADDRESS(TIM1 + 38H);
					TIM1CCR3*   = ADDRESS(TIM1 + 3CH);
					TIM1CCR4*   = ADDRESS(TIM1 + 40H);
					TIM1BDTR*   = ADDRESS(TIM1 + 44H);
					TIM1DCR*    = ADDRESS(TIM1 + 48H);
					TIM1DMAR*   = ADDRESS(TIM1 + 4CH);
                SPI1* = ADDRESS(40013000H); I2S1* = SPI1;
					SPI1CR1*    = ADDRESS(SPI1 + 0);
					SPI1CR2*    = ADDRESS(SPI1 + 4);
					SPI1SR*     = ADDRESS(SPI1 + 8);
					SPI1DR*     = ADDRESS(SPI1 + 0CH);
					SPI1CRCPR*  = ADDRESS(SPI1 + 10H);
					SPI1RXCRCR* = ADDRESS(SPI1 + 14H);
					SPI1TXCRCR* = ADDRESS(SPI1 + 18H);
					SPI1I2SCFGR*= ADDRESS(SPI1 + 1CH);
					SPI1I2SPR*  = ADDRESS(SPI1 + 20H);
                USART1* = ADDRESS(40013800H);
					USART1SR*   = ADDRESS(USART1 + 0);
					USART1DR*   = ADDRESS(USART1 + 4);
					USART1BRR*  = ADDRESS(USART1 + 8);
					USART1CR1*  = ADDRESS(USART1 + 0CH);
					USART1CR2*  = ADDRESS(USART1 + 10H);
					USART1CR3*  = ADDRESS(USART1 + 14H);
					USART1GTPR* = ADDRESS(USART1 + 18H);
                TIM15* = ADDRESS(40014000H);
					TIM15CR1*   = ADDRESS(TIM15 + 0);
					TIM15SMCR*  = ADDRESS(TIM15 + 8);
					TIM15DIER*  = ADDRESS(TIM15 + 0CH);
					TIM15SR*    = ADDRESS(TIM15 + 10H);
					TIM15EGR*   = ADDRESS(TIM15 + 14H);
					TIM15CCMR1* = ADDRESS(TIM15 + 18H);
					TIM15CCER*  = ADDRESS(TIM15 + 20H);
					TIM15CNT*   = ADDRESS(TIM15 + 24H);
					TIM15PSC*   = ADDRESS(TIM15 + 28H);
					TIM15ARR*   = ADDRESS(TIM15 + 2CH);
					TIM15CCR1*  = ADDRESS(TIM15 + 34H);
					TIM15OR*    = ADDRESS(TIM15 + 50H);
                TIM16* = ADDRESS(40014400H);
					TIM16CR1*   = ADDRESS(TIM16 + 0);
					TIM16SMCR*  = ADDRESS(TIM16 + 8);
					TIM16DIER*  = ADDRESS(TIM16 + 0CH);
					TIM16SR*    = ADDRESS(TIM16 + 10H);
					TIM16EGR*   = ADDRESS(TIM16 + 14H);
					TIM16CCMR1* = ADDRESS(TIM16 + 18H);
					TIM16CCER*  = ADDRESS(TIM16 + 20H);
					TIM16CNT*   = ADDRESS(TIM16 + 24H);
					TIM16PSC*   = ADDRESS(TIM16 + 28H);
					TIM16ARR*   = ADDRESS(TIM16 + 2CH);
					TIM16CCR1*  = ADDRESS(TIM16 + 34H);
					TIM16OR*    = ADDRESS(TIM16 + 50H);
                SAI1* = ADDRESS(40015400H);
                DFSDM1* = ADDRESS(40016000H);
            (* AHB1 *)
                DMA1* = ADDRESS(40020000H);
				DMA2* = ADDRESS(40020400H);
                RCC* = ADDRESS(40021000H);
					RCCCR*          = ADDRESS(RCC + 0);
					RCCPLLCFGR*     = ADDRESS(RCC + 4);
					RCCCFGR*        = ADDRESS(RCC + 8);
					RCCCIR*         = ADDRESS(RCC + 0CH);
					RCCAHB1RSTR*    = ADDRESS(RCC + 10H);
					RCCAHB2RSTR*    = ADDRESS(RCC + 14H);
					RCCAHB3RSTR*    = ADDRESS(RCC + 18H);
					RCCAPB1RSTR*    = ADDRESS(RCC + 20H);
					RCCAPB2RSTR*    = ADDRESS(RCC + 24H);
					RCCAHB1ENR*     = ADDRESS(RCC + 30H);
					RCCAHB2ENR*     = ADDRESS(RCC + 34H);
					RCCAHB3ENR*     = ADDRESS(RCC + 38H);
					RCCAPB1ENR*     = ADDRESS(RCC + 40H);
					RCCAPB2ENR*     = ADDRESS(RCC + 44H);
					RCCAHB1LPENR*   = ADDRESS(RCC + 50H);
					RCCAHB2LPENR*   = ADDRESS(RCC + 54H);
					RCCAHB3LPENR*   = ADDRESS(RCC + 58H);
					RCCAPB1LPENR*   = ADDRESS(RCC + 60H);
					RCCAPB2LPENR*   = ADDRESS(RCC + 64H);
					RCCBDCR*        = ADDRESS(RCC + 70H);
					RCCCSR*         = ADDRESS(RCC + 74H);
					RCCSSCGR*       = ADDRESS(RCC + 80H);
					RCCPLLI2SCFGR*  = ADDRESS(RCC + 84H);
					RCCPLLSAICFGR*  = ADDRESS(RCC + 88H);
					RCCDCKCFGR*     = ADDRESS(RCC + 8CH);
					RCCCKGATENR*    = ADDRESS(RCC + 90H);
					RCCDCKCFGR2*    = ADDRESS(RCC + 94H);
                FlashInterface* = ADDRESS(40022000H); (* Flash interface register *)
					FLASHACR*       = ADDRESS(FlashInterface + 0);
					FLASHPDKEYR*    = ADDRESS(FlashInterface + 4);
					FLASHKEYR*      = ADDRESS(FlashInterface + 8);
					FLASHOPTKEYR*   = ADDRESS(FlashInterface + 0CH);
					FLASHSR*        = ADDRESS(FlashInterface + 10H);
					FLASHCR*        = ADDRESS(FlashInterface + 14H);
					FLASHECCR*      = ADDRESS(FlashInterface + 18H);
					FLASHOPTR*      = ADDRESS(FlashInterface + 20H);
					FLASHPCROP1SR*  = ADDRESS(FlashInterface + 24H);
					FLASHPCROP1ER*  = ADDRESS(FlashInterface + 28H);
					FLASHWRP1AR*    = ADDRESS(FlashInterface + 2CH);
					FLASHWRP1BR*    = ADDRESS(FlashInterface + 30H);
                CRC* = ADDRESS(40023000H);
					CRCDR*     = ADDRESS(CRC + 0);
					CRCIDR*    = ADDRESS(CRC + 4);
					CRCCR*     = ADDRESS(CRC + 8);
					CRCINIT*   = ADDRESS(CRC + 10H);
					CRCPOL*    = ADDRESS(CRC + 14H);
					CRCPOL*    = ADDRESS(CRC + 14H);
                TSC* = ADDRESS(40024000H);
            (* AHB2 *)
				GPIOA* = ADDRESS(48000000H);
					GPIOAMODER*     = ADDRESS(GPIOA + 0);
					GPIOAOTYPER*    = ADDRESS(GPIOA + 4);
					GPIOAOSPEEDR*   = ADDRESS(GPIOA + 8);
					GPIOAPUPDR*     = ADDRESS(GPIOA + 0CH);
					GPIOAIDR*       = ADDRESS(GPIOA + 10H);
					GPIOAODR*       = ADDRESS(GPIOA + 14H);
					GPIOABSRR*      = ADDRESS(GPIOA + 18H);
					GPIOALCKR*      = ADDRESS(GPIOA + 1CH);
					GPIOAAFRL*      = ADDRESS(GPIOA + 20H);
					GPIOAAFRH*      = ADDRESS(GPIOA + 24H);
                GPIOB* = ADDRESS(48000400H);
					GPIOBMODER*     = ADDRESS(GPIOB + 0);
					GPIOBOTYPER*    = ADDRESS(GPIOB + 4);
					GPIOBOSPEEDR*   = ADDRESS(GPIOB + 8);
					GPIOBPUPDR*     = ADDRESS(GPIOB + 0CH);
					GPIOBIDR*       = ADDRESS(GPIOB + 10H);
					GPIOBODR*       = ADDRESS(GPIOB + 14H);
					GPIOBBSRR*      = ADDRESS(GPIOB + 18H);
					GPIOBLCKR*      = ADDRESS(GPIOB + 1CH);
					GPIOBAFRL*      = ADDRESS(GPIOB + 20H);
					GPIOBAFRH*      = ADDRESS(GPIOB + 24H);
                GPIOC* = ADDRESS(48000800H);
					GPIOCMODER*     = ADDRESS(GPIOC + 0);
					GPIOCOTYPER*    = ADDRESS(GPIOC + 4);
					GPIOCOSPEEDR*   = ADDRESS(GPIOC + 8);
					GPIOCPUPDR*     = ADDRESS(GPIOC + 0CH);
					GPIOCIDR*       = ADDRESS(GPIOC + 10H);
					GPIOCODR*       = ADDRESS(GPIOC + 14H);
					GPIOCBSRR*      = ADDRESS(GPIOC + 18H);
					GPIOCLCKR*      = ADDRESS(GPIOC + 1CH);
					GPIOCAFRL*      = ADDRESS(GPIOC + 20H);
					GPIOCAFRH*      = ADDRESS(GPIOC + 24H);
                GPIOD* = ADDRESS(48000C00H);
					GPIODMODER*     = ADDRESS(GPIOD + 0);
					GPIODOTYPER*    = ADDRESS(GPIOD + 4);
					GPIODOSPEEDR*   = ADDRESS(GPIOD + 8);
					GPIODPUPDR*     = ADDRESS(GPIOD + 0CH);
					GPIODIDR*       = ADDRESS(GPIOD + 10H);
					GPIODODR*       = ADDRESS(GPIOD + 14H);
					GPIODBSRR*      = ADDRESS(GPIOD + 18H);
					GPIODLCKR*      = ADDRESS(GPIOD + 1CH);
					GPIODAFRL*      = ADDRESS(GPIOD + 20H);
					GPIODAFRH*      = ADDRESS(GPIOD + 24H);
                GPIOE* = ADDRESS(48001000H);
					GPIOEMODER*     = ADDRESS(GPIOE + 0);
					GPIOEOTYPER*    = ADDRESS(GPIOE + 4);
					GPIOEOSPEEDR*   = ADDRESS(GPIOE + 8);
					GPIOEPUPDR*     = ADDRESS(GPIOE + 0CH);
					GPIOEIDR*       = ADDRESS(GPIOE + 10H);
					GPIOEODR*       = ADDRESS(GPIOE + 14H);
					GPIOEBSRR*      = ADDRESS(GPIOE + 18H);
					GPIOELCKR*      = ADDRESS(GPIOE + 1CH);
					GPIOEAFRL*      = ADDRESS(GPIOE + 20H);
					GPIOEAFRH*      = ADDRESS(GPIOE + 24H);
                GPIOH* = ADDRESS(48001C00H);
					GPIOHMODER*     = ADDRESS(GPIOH + 0);
					GPIOHOTYPER*    = ADDRESS(GPIOH + 4);
					GPIOHOSPEEDR*   = ADDRESS(GPIOH + 8);
					GPIOHPUPDR*     = ADDRESS(GPIOH + 0CH);
					GPIOHIDR*       = ADDRESS(GPIOH + 10H);
					GPIOHODR*       = ADDRESS(GPIOH + 14H);
					GPIOHBSRR*      = ADDRESS(GPIOH + 18H);
					GPIOHLCKR*      = ADDRESS(GPIOH + 1CH);
					GPIOHAFRL*      = ADDRESS(GPIOH + 20H);
					GPIOHAFRH*      = ADDRESS(GPIOH + 24H);
                ADC* = ADDRESS(50040000H);
					ADCSR*     = ADDRESS(ADC + 0);
					ADCCR1*    = ADDRESS(ADC + 4);
					ADCCR2*    = ADDRESS(ADC + 8);
					ADCSMPR1*  = ADDRESS(ADC + 0CH);
					ADCSMPR2*  = ADDRESS(ADC + 10H);
					ADCJOFR1*  = ADDRESS(ADC + 14H);
					ADCJOFR2*  = ADDRESS(ADC + 18H);
					ADCJOFR3*  = ADDRESS(ADC + 1CH);
					ADCJOFR4*  = ADDRESS(ADC + 20H);
					ADCHTR*    = ADDRESS(ADC + 24H);
					ADCLTR*    = ADDRESS(ADC + 28H);
					ADCSQR1*   = ADDRESS(ADC + 2CH);
					ADCSQR2*   = ADDRESS(ADC + 30H);
					ADCSQR3*   = ADDRESS(ADC + 34H);
					ADCJSQR*   = ADDRESS(ADC + 38H);
					ADCJDR1*   = ADDRESS(ADC + 3CH);
					ADCJDR2*   = ADDRESS(ADC + 40H);
					ADCJDR3*   = ADDRESS(ADC + 44H);
					ADCJDR4*   = ADDRESS(ADC + 48H);
					ADCDR*     = ADDRESS(ADC + 4CH);
                AES* = ADDRESS(50060000H);
                RNG* = ADDRESS(50060800H);
END STM32L4.
