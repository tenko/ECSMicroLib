MODULE STM32L4 IN Micro;

	(*
		Alexander Shiryaev, 2015.02, 2015.07, 2016.10, 2017.10, 2018.05, 2021.08
        Modified by Tenko for use with ECS

        RM0394, Reference manual,
            STM32L41xxx/42xxx/43xxx/44xxx/45xxx/46xxx

        RM0351, Reference manual,
            STM32L47xxx, STM32L48xxx, STM32L49xxx and STM32L4Axxx
	*)
    IMPORT SYSTEM;

    TYPE ADDRESS = SYSTEM.ADDRESS;

    CONST
		(* memory map *)
			BootStart* = ADDRESS(0H);
			FlashStart* = ADDRESS(8000000H);
			SystemMemory* = ADDRESS(1FFF0000H); (* 28 KiB *)
			OTPArea* = ADDRESS(1FFF7000H); (* 1 KiB *)
			(* device electronic signature *)
				(* Unique device ID register (96 bits) *)
					UID* = ADDRESS(1FFF7590H); (* 12 B *)
						UID0* = ADDRESS(UID + 0);
						UID1* = ADDRESS(UID0 + 4);
						UID2* =ADDRESS( UID1 + 4);
				(* Flash size, in KiB *)
					FlashSizeKiBAdr* = ADDRESS(1FFF75E0H); (* 2 B *)
			OptionBytes* = ADDRESS(1FFF7800H); (* 16 B *)
			(* APB1 *)
				TIM2* = ADDRESS(40000000H);
					TIM2_CR1*    = ADDRESS(TIM2 + 0);
					TIM2_CR2*    = ADDRESS(TIM2 + 4);
					TIM2_SMCR*   = ADDRESS(TIM2 + 8);
					TIM2_DIER*   = ADDRESS(TIM2 + 0CH);
					TIM2_SR*     = ADDRESS(TIM2 + 10H);
					TIM2_EGR*    = ADDRESS(TIM2 + 14H);
					TIM2_CCMR1*  = ADDRESS(TIM2 + 18H);
					TIM2_CCMR2*  = ADDRESS(TIM2 + 1CH);
					TIM2_CCER*   = ADDRESS(TIM2 + 20H);
					TIM2_CNT*    = ADDRESS(TIM2 + 24H);
					TIM2_PSC*    = ADDRESS(TIM2 + 28H);
					TIM2_ARR*    = ADDRESS(TIM2 + 2CH);
					TIM2_CCR1*   = ADDRESS(TIM2 + 34H);
					TIM2_CCR2*   = ADDRESS(TIM2 + 38H);
					TIM2_CCR3*   = ADDRESS(TIM2 + 3CH);
					TIM2_CCR4*   = ADDRESS(TIM2 + 40H);
					TIM2_DCR*    = ADDRESS(TIM2 + 48H);
					TIM2_DMAR*   = ADDRESS(TIM2 + 4CH);
					TIM2_OR1*    = ADDRESS(TIM2 + 50H);
					TIM2_OR2*    = ADDRESS(TIM2 + 60H);
                TIM3* = ADDRESS(40000400H);
					TIM3_CR1*    = ADDRESS(TIM3 + 0);
					TIM3_CR2*    = ADDRESS(TIM3 + 4);
					TIM3_SMCR*   = ADDRESS(TIM3 + 8);
					TIM3_DIER*   = ADDRESS(TIM3 + 0CH);
					TIM3_SR*     = ADDRESS(TIM3 + 10H);
					TIM3_EGR*    = ADDRESS(TIM3 + 14H);
					TIM3_CCMR1*  = ADDRESS(TIM3 + 18H);
					TIM3_CCMR2*  = ADDRESS(TIM3 + 1CH);
					TIM3_CCER*   = ADDRESS(TIM3 + 20H);
					TIM3_CNT*    = ADDRESS(TIM3 + 24H);
					TIM3_PSC*    = ADDRESS(TIM3 + 28H);
					TIM3_ARR*    = ADDRESS(TIM3 + 2CH);
					TIM3_CCR1*   = ADDRESS(TIM3 + 34H);
					TIM3_CCR2*   = ADDRESS(TIM3 + 38H);
					TIM3_CCR3*   = ADDRESS(TIM3 + 3CH);
					TIM3_CCR4*   = ADDRESS(TIM3 + 40H);
					TIM3_DCR*    = ADDRESS(TIM3 + 48H);
					TIM3_DMAR*   = ADDRESS(TIM3 + 4CH);
                    TIM3_OR1*    = ADDRESS(TIM3 + 50H);
					TIM3_OR2*    = ADDRESS(TIM3 + 60H);
                TIM6* = ADDRESS(40001000H);
					TIM6_CR1*    = ADDRESS(TIM6 + 0);
					TIM6_CR2*    = ADDRESS(TIM6 + 4);
					TIM6_DIER*   = ADDRESS(TIM6 + 0CH);
					TIM6_SR*     = ADDRESS(TIM6 + 10H);
					TIM6_EGR*    = ADDRESS(TIM6 + 14H);
					TIM6_CNT*    = ADDRESS(TIM6 + 24H);
					TIM6_PSC*    = ADDRESS(TIM6 + 28H);
					TIM6_ARR*    = ADDRESS(TIM6 + 2CH);
                TIM7* = ADDRESS(40001400H);
					TIM7_CR1*    = ADDRESS(TIM7 + 0);
					TIM7_CR2*    = ADDRESS(TIM7 + 4);
					TIM7_DIER*   = ADDRESS(TIM7 + 0CH);
					TIM7_SR*     = ADDRESS(TIM7 + 10H);
					TIM7_EGR*    = ADDRESS(TIM7 + 14H);
					TIM7_CNT*    = ADDRESS(TIM7 + 24H);
					TIM7_PSC*    = ADDRESS(TIM7 + 28H);
					TIM7_ARR*    = ADDRESS(TIM7 + 2CH);
                LCD* = ADDRESS(40002400H);
                RTCBKPRegisters* = ADDRESS(40002850H);
                WWDG* = ADDRESS(40002C00H);
					WWDG_CR*     = ADDRESS(WWDG + 0);
					WWDG_CFR*    = ADDRESS(WWDG + 4);
					WWDG_SR*     = ADDRESS(WWDG + 8);
				IWDG* = ADDRESS(40003000H);
					IWDG_KR*     = ADDRESS(IWDG + 0);
					IWDG_PR*     = ADDRESS(IWDG + 4);
					IWDG_RLR*    = ADDRESS(IWDG + 8);
					IWDG_SR*     = ADDRESS(IWDG + 0CH);
					IWDG_INR*    = ADDRESS(IWDG + 10H);
                SPI2* = ADDRESS(40003800H); I2S2* = SPI2;
					SPI2_CR1*    = ADDRESS(SPI2 + 0);
					SPI2_CR2*    = ADDRESS(SPI2 + 4);
					SPI2_SR*     = ADDRESS(SPI2 + 8);
					SPI2_DR*     = ADDRESS(SPI2 + 0CH);
					SPI2_CRCPR*  = ADDRESS(SPI2 + 10H);
					SPI2_RXCRCR* = ADDRESS(SPI2 + 14H);
					SPI2_TXCRCR* = ADDRESS(SPI2 + 18H);
					SPI2_I2SCFGR*= ADDRESS(SPI2 + 1CH);
					SPI2_I2SPR*  = ADDRESS(SPI2 + 20H);
				SPI3* = ADDRESS(40003C00H); I2S3* = SPI3;
					SPI3_CR1*    = ADDRESS(SPI3 + 0);
					SPI3_CR2*    = ADDRESS(SPI3 + 4);
					SPI3_SR*     = ADDRESS(SPI3 + 8);
					SPI3_DR*     = ADDRESS(SPI3 + 0CH);
					SPI3_CRCPR*  = ADDRESS(SPI3 + 10H);
					SPI3_RXCRCR* = ADDRESS(SPI3 + 14H);
					SPI3_TXCRCR* = ADDRESS(SPI3 + 18H);
					SPI3_I2SCFGR*= ADDRESS(SPI3 + 1CH);
					SPI3_I2SPR*  = ADDRESS(SPI3 + 20H);
                USART2* = ADDRESS(40004400H);
					USART2_CR1*  = ADDRESS(USART2 + 0);
					USART2_CR2*  = ADDRESS(USART2 + 4);
					USART2_CR3*  = ADDRESS(USART2 + 8);
					USART2_BRR*  = ADDRESS(USART2 + 0CH);
					USART2_GTPR* = ADDRESS(USART2 + 10H);
					USART2_RTOR* = ADDRESS(USART2 + 14H);
					USART2_RQR*  = ADDRESS(USART2 + 18H);
                    USART2_ISR*  = ADDRESS(USART2 + 1CH);
                    USART2_ICR*  = ADDRESS(USART2 + 20H);
                    USART2_RDR*  = ADDRESS(USART2 + 24H);
                    USART2_TDR*  = ADDRESS(USART2 + 28H);
				USART3* = ADDRESS(40004800H);
					USART3_CR1*  = ADDRESS(USART3 + 0);
					USART3_CR2*  = ADDRESS(USART3 + 4);
					USART3_CR3*  = ADDRESS(USART3 + 8);
					USART3_BRR*  = ADDRESS(USART3 + 0CH);
					USART3_GTPR* = ADDRESS(USART3 + 10H);
					USART3_RTOR* = ADDRESS(USART3 + 14H);
					USART3_RQR*  = ADDRESS(USART3 + 18H);
                    USART3_ISR*  = ADDRESS(USART3 + 1CH);
                    USART3_ICR*  = ADDRESS(USART3 + 20H);
                    USART3_RDR*  = ADDRESS(USART3 + 24H);
                    USART3_TDR*  = ADDRESS(USART3 + 28H);
                UART4* = ADDRESS(40004C00H);
					UART4_CR1*  = ADDRESS(UART4 + 0);
					UART4_CR2*  = ADDRESS(UART4 + 4);
					UART4_CR3*  = ADDRESS(UART4 + 8);
					UART4_BRR*  = ADDRESS(UART4 + 0CH);
					UART4_GTPR* = ADDRESS(UART4 + 10H);
					UART4_RTOR* = ADDRESS(UART4 + 14H);
					UART4_RQR*  = ADDRESS(UART4 + 18H);
                    UART4_ISR*  = ADDRESS(UART4 + 1CH);
                    UART4_ICR*  = ADDRESS(UART4 + 20H);
                    UART4_RDR*  = ADDRESS(UART4 + 24H);
                    UART4_TDR*  = ADDRESS(UART4 + 28H);
                I2C1* = ADDRESS(40005400H);
					I2C1_CR1*        = ADDRESS(I2C1 + 0);
					I2C1_CR2*        = ADDRESS(I2C1 + 4);
					I2C1_OAR1*       = ADDRESS(I2C1 + 8);
					I2C1_OAR2*       = ADDRESS(I2C1 + 0CH);
					I2C1_TIMINGR*    = ADDRESS(I2C1 + 10H);
					I2C1_TIMEOUTR*   = ADDRESS(I2C1 + 14H);
					I2C1_ISR*        = ADDRESS(I2C1 + 18H);
					I2C1_ICR*        = ADDRESS(I2C1 + 1CH);
					I2C1_PECR*       = ADDRESS(I2C1 + 20H);
					I2C1_RXDR*       = ADDRESS(I2C1 + 24H);
                    I2C1_TXDR*       = ADDRESS(I2C1 + 28H);
                I2C2* = ADDRESS(40005800H);
					I2C2_CR1*        = ADDRESS(I2C2 + 0);
					I2C2_CR2*        = ADDRESS(I2C2 + 4);
					I2C2_OAR1*       = ADDRESS(I2C2 + 8);
					I2C2_OAR2*       = ADDRESS(I2C2 + 0CH);
					I2C2_TIMINGR*    = ADDRESS(I2C2 + 10H);
					I2C2_TIMEOUTR*   = ADDRESS(I2C2 + 14H);
					I2C2_ISR*        = ADDRESS(I2C2 + 18H);
					I2C2_ICR*        = ADDRESS(I2C2 + 1CH);
					I2C2_PECR*       = ADDRESS(I2C2 + 20H);
					I2C2_RXDR*       = ADDRESS(I2C2 + 24H);
                    I2C2_TXDR*       = ADDRESS(I2C2 + 28H);
				I2C3* = ADDRESS(40005C00H);
					I2C3_CR1*        = ADDRESS(I2C3 + 0);
					I2C3_CR2*        = ADDRESS(I2C3 + 4);
					I2C3_OAR1*       = ADDRESS(I2C3 + 8);
					I2C3_OAR2*       = ADDRESS(I2C3 + 0CH);
					I2C3_TIMINGR*    = ADDRESS(I2C3 + 10H);
					I2C3_TIMEOUTR*   = ADDRESS(I2C3 + 14H);
					I2C3_ISR*        = ADDRESS(I2C3 + 18H);
					I2C3_ICR*        = ADDRESS(I2C3 + 1CH);
					I2C3_PECR*       = ADDRESS(I2C3 + 20H);
					I2C3_RXDR*       = ADDRESS(I2C3 + 24H);
                    I2C3_TXDR*       = ADDRESS(I2C3 + 28H);
                CRS* = ADDRESS(40006000H);
                    CRS_CR*      = (CRS + 0);
                    CRS_CFGR*    = (CRS + 4);
                    CRS_ISR*     = (CRS + 8);
                    CRS_ICR*     = (CRS + 0CH);
                CAN1* = ADDRESS(40006400H);
                USBOTGFS* = ADDRESS(40006800H);
                USBOTGSRAM* = ADDRESS(40006C00H);
                PWR* = ADDRESS(40007000H);
					PWR_CR1*     = ADDRESS(PWR + 0);
					PWR_CR2*     = ADDRESS(PWR + 4);
                	PWR_CR3*     = ADDRESS(PWR + 8);
                	PWR_CR4*     = ADDRESS(PWR + 0CH);
                	PWR_SR1*     = ADDRESS(PWR + 10H);
                	PWR_SR2*     = ADDRESS(PWR + 14H);
                	PWR_SCR*     = ADDRESS(PWR + 18H);
                	PWR_PUCRA*   = ADDRESS(PWR + 20H);
                	PWR_PDCRA*   = ADDRESS(PWR + 24H);
                	PWR_PUCRB*   = ADDRESS(PWR + 28H);
                	PWR_PDCRB*   = ADDRESS(PWR + 2CH);
                	PWR_PUCRC*   = ADDRESS(PWR + 30H);
                	PWR_PDCRC*   = ADDRESS(PWR + 34H);
                	PWR_PUCRD*   = ADDRESS(PWR + 38H);
                	PWR_PUCRE*   = ADDRESS(PWR + 40H);
                	PWR_PDCRE*   = ADDRESS(PWR + 44H);
                    PWR_PUCRH*   = ADDRESS(PWR + 58H);
                    PWR_PDCRH*   = ADDRESS(PWR + 5CH);
                DAC1* = ADDRESS(40007400H);
					DAC1_CR*      = ADDRESS(DAC1 + 0);
					DAC1_SWTRIGR* = ADDRESS(DAC1 + 4);
					DAC1_DHR12R1* = ADDRESS(DAC1 + 8);
					DAC1_DHR12L1* = ADDRESS(DAC1 + 0CH);
					DAC1_DHR8R1*  = ADDRESS(DAC1 + 10H);
					DAC1_DHR12R2* = ADDRESS(DAC1 + 14H);
					DAC1_DHR12L2* = ADDRESS(DAC1 + 18H);
					DAC1_DHR8R2*  = ADDRESS(DAC1 + 1CH);
					DAC1_DHR12RD* = ADDRESS(DAC1 + 20H);
					DAC1_DHR12LD* = ADDRESS(DAC1 + 24H);
					DAC1_DHR8RD*  = ADDRESS(DAC1 + 28H);
					DAC1_DOR1*    = ADDRESS(DAC1 + 2CH);
					DAC1_DOR2*    = ADDRESS(DAC1 + 30H);
					DAC1_SR*      = ADDRESS(DAC1 + 34H);
                    DAC1_CCR*     = ADDRESS(DAC1 + 38H);
                    DAC1_MCR*     = ADDRESS(DAC1 + 3CH);
                    DAC1_SHSR1*   = ADDRESS(DAC1 + 40H);
                    DAC1_SHSR2*   = ADDRESS(DAC1 + 44H);
                    DAC1_SHHR*    = ADDRESS(DAC1 + 48H);
                    DAC1_SHRR*    = ADDRESS(DAC1 + 4CH);
                OPAMP* = ADDRESS(40007800H);
                    OPAMP_CSR*    = ADDRESS(OPAMP + 0);
                    OPAMP_OTR*    = ADDRESS(OPAMP + 4);
                    OPAMP_LTOTR*  = ADDRESS(OPAMP + 8);
                LPTIM1* = ADDRESS(40007C00H);
                    LPTIM1_ISR*      = ADDRESS(LPTIM1 + 0);
					LPTIM1_ICR*      = ADDRESS(LPTIM1 + 4);
					LPTIM1_IER*      = ADDRESS(LPTIM1 + 8);
					LPTIM1_FGR*      = ADDRESS(LPTIM1 + 0CH);
					LPTIM1_CR*       = ADDRESS(LPTIM1 + 10H);
					LPTIM1_CMP*      = ADDRESS(LPTIM1 + 14H);
					LPTIM1_ARR*      = ADDRESS(LPTIM1 + 18H);
					LPTIM1_CNT*      = ADDRESS(LPTIM1 + 1CH);
					LPTIM1_OR*       = ADDRESS(LPTIM1 + 20H);
					LPTIM1_CFGR2*    = ADDRESS(LPTIM1 + 24H);
                    LPTIM1_RCR*      = ADDRESS(LPTIM1 + 28H);
                LPUART1* = ADDRESS(40008000H);
                    LPUART1_CR1*  = ADDRESS(LPUART1 + 0);
					LPUART1_CR2*  = ADDRESS(LPUART1 + 4);
					LPUART1_CR3*  = ADDRESS(LPUART1 + 8);
					LPUART1_BRR*  = ADDRESS(LPUART1 + 0CH);
					LPUART1_GTPR* = ADDRESS(LPUART1 + 10H);
					LPUART1_RQR*  = ADDRESS(LPUART1 + 18H);
                    LPUART1_ISR*  = ADDRESS(LPUART1 + 1CH);
                    LPUART1_ICR*  = ADDRESS(LPUART1 + 20H);
                    LPUART1_RDR*  = ADDRESS(LPUART1 + 24H);
                    LPUART1_TDR*  = ADDRESS(LPUART1 + 28H);
                I2C4* = ADDRESS(40008400H);
					I2C4_CR1*        = ADDRESS(I2C4 + 0);
					I2C4_CR2*        = ADDRESS(I2C4 + 4);
					I2C4_OAR1*       = ADDRESS(I2C4 + 8);
					I2C4_OAR2*       = ADDRESS(I2C4 + 0CH);
					I2C4_TIMINGR*    = ADDRESS(I2C4 + 10H);
					I2C4_TIMEOUTR*   = ADDRESS(I2C4 + 14H);
					I2C4_ISR*        = ADDRESS(I2C4 + 18H);
					I2C4_ICR*        = ADDRESS(I2C4 + 1CH);
					I2C4_PECR*       = ADDRESS(I2C4 + 20H);
					I2C4_RXDR*       = ADDRESS(I2C4 + 24H);
                    I2C4_TXDR*       = ADDRESS(I2C4 + 28H);
                SWPMI1* = ADDRESS(40008800H);
                LPTIM2* = ADDRESS(40009400H);
                    LPTIM2_ISR*      = ADDRESS(LPTIM2 + 0);
					LPTIM2_ICR*      = ADDRESS(LPTIM2 + 4);
					LPTIM2_IER*      = ADDRESS(LPTIM2 + 8);
					LPTIMC_FGR*      = ADDRESS(LPTIM2 + 0CH);
					LPTIM2_CR*       = ADDRESS(LPTIM2 + 10H);
					LPTIM2_CMP*      = ADDRESS(LPTIM2 + 14H);
					LPTIM2_ARR*      = ADDRESS(LPTIM2 + 18H);
					LPTIM2_CNT*      = ADDRESS(LPTIM2 + 1CH);
					LPTIM2_OR*       = ADDRESS(LPTIM2 + 20H);
					LPTIM2_CFGR2*    = ADDRESS(LPTIM2 + 24H);
                    LPTIM2_RCR*      = ADDRESS(LPTIM2 + 28H);
            (* APB2 *)
                SYSCFG* = ADDRESS(40010000H);
					SYSCFG_MEMRMP*   = ADDRESS(SYSCFG + 0);
					SYSCFG_FGR1*     = ADDRESS(SYSCFG + 4);
					SYSCFG_EXTICR1*  = ADDRESS(SYSCFG + 8);
					SYSCFG_EXTICR2*  = ADDRESS(SYSCFG + 0CH);
					SYSCFG_EXTICR3*  = ADDRESS(SYSCFG + 10H);
					SYSCFG_EXTICR4*  = ADDRESS(SYSCFG + 14H);
					SYSCFG_SCSR*     = ADDRESS(SYSCFG + 18H);
					SYSCFG_CFGR2*    = ADDRESS(SYSCFG + 1CH);
                    SYSCFG_SWPR*     = ADDRESS(SYSCFG + 20H);
                    SYSCFG_SKR*      = ADDRESS(SYSCFG + 24H);
                VREFBUF* = ADDRESS(40010030H);
                	VREFBUF_CSR* = ADDRESS(VREFBUF + 0);
                    VREFBUF_CCR* = ADDRESS(VREFBUF + 4);
                COMP* = ADDRESS(40010200H);
                	COMP1_CSR*   = ADDRESS(COMP + 0);
                    COMP2_CSR*   = ADDRESS(COMP + 0);
                EXTI* = ADDRESS(40010400H);
					EXTI_IMR*    = ADDRESS(EXTI + 0);
					EXTI_EMR*    = ADDRESS(EXTI + 4);
					EXTI_RTSR*   = ADDRESS(EXTI + 8);
					EXTI_FTSR*   = ADDRESS(EXTI + 0CH);
					EXTI_SWIER*  = ADDRESS(EXTI + 10H);
					EXTI_PR*     = ADDRESS(EXTI + 14H);
                FIREWALL* = ADDRESS(40011C00H);
                SDMMC* = ADDRESS(40012800H);
                TIM1* = ADDRESS(40012C00H);
					TIM1_CR1*    = ADDRESS(TIM1 + 0);
					TIM1_CR2*    = ADDRESS(TIM1 + 4);
					TIM1_SMCR*   = ADDRESS(TIM1 + 8);
					TIM1_DIER*   = ADDRESS(TIM1 + 0CH);
					TIM1_SR*     = ADDRESS(TIM1 + 10H);
					TIM1_EGR*    = ADDRESS(TIM1 + 14H);
					TIM1_CCMR1*  = ADDRESS(TIM1 + 18H);
					TIM1_CCMR2*  = ADDRESS(TIM1 + 1CH);
					TIM1_CCER*   = ADDRESS(TIM1 + 20H);
					TIM1_CNT*    = ADDRESS(TIM1 + 24H);
					TIM1_PSC*    = ADDRESS(TIM1 + 28H);
					TIM1_ARR*    = ADDRESS(TIM1 + 2CH);
					TIM1_RCR*    = ADDRESS(TIM1 + 30H);
					TIM1_CCR1*   = ADDRESS(TIM1 + 34H);
					TIM1_CCR2*   = ADDRESS(TIM1 + 38H);
					TIM1_CCR3*   = ADDRESS(TIM1 + 3CH);
					TIM1_CCR4*   = ADDRESS(TIM1 + 40H);
					TIM1_BDTR*   = ADDRESS(TIM1 + 44H);
					TIM1_DCR*    = ADDRESS(TIM1 + 48H);
					TIM1_DMAR*   = ADDRESS(TIM1 + 4CH);
                    TIM1_OR1*    = ADDRESS(TIM1 + 50H);
                    TIM1_CCMR3*  = ADDRESS(TIM1 + 54H);
                    TIM1_CCR5*   = ADDRESS(TIM1 + 58H);
                    TIM1_CCR6*   = ADDRESS(TIM1 + 5CH);
                    TIM1_OR2*    = ADDRESS(TIM1 + 60H);
                    TIM1_OR3*    = ADDRESS(TIM1 + 64H);
                SPI1* = ADDRESS(40013000H); I2S1* = SPI1;
					SPI1_CR1*    = ADDRESS(SPI1 + 0);
					SPI1_CR2*    = ADDRESS(SPI1 + 4);
					SPI1_SR*     = ADDRESS(SPI1 + 8);
					SPI1_DR*     = ADDRESS(SPI1 + 0CH);
					SPI1_CRCPR*  = ADDRESS(SPI1 + 10H);
					SPI1_RXCRCR* = ADDRESS(SPI1 + 14H);
					SPI1_TXCRCR* = ADDRESS(SPI1 + 18H);
					SPI1_I2SCFGR*= ADDRESS(SPI1 + 1CH);
					SPI1_I2SPR*  = ADDRESS(SPI1 + 20H);
                USART1* = ADDRESS(40013800H);
					USART1_SR*   = ADDRESS(USART1 + 0);
					USART1_DR*   = ADDRESS(USART1 + 4);
					USART1_BRR*  = ADDRESS(USART1 + 8);
					USART1_CR1*  = ADDRESS(USART1 + 0CH);
					USART1_CR2*  = ADDRESS(USART1 + 10H);
					USART1_CR3*  = ADDRESS(USART1 + 14H);
					USART1_GTPR* = ADDRESS(USART1 + 18H);
                TIM15* = ADDRESS(40014000H);
					TIM15_CR1*   = ADDRESS(TIM15 + 0);
					TIM15_SMCR*  = ADDRESS(TIM15 + 8);
					TIM15_DIER*  = ADDRESS(TIM15 + 0CH);
					TIM15_SR*    = ADDRESS(TIM15 + 10H);
					TIM15_EGR*   = ADDRESS(TIM15 + 14H);
					TIM15_CCMR1* = ADDRESS(TIM15 + 18H);
					TIM15_CCER*  = ADDRESS(TIM15 + 20H);
					TIM15_CNT*   = ADDRESS(TIM15 + 24H);
					TIM15_PSC*   = ADDRESS(TIM15 + 28H);
					TIM15_ARR*   = ADDRESS(TIM15 + 2CH);
					TIM15_CCR1*  = ADDRESS(TIM15 + 34H);
					TIM15_OR*    = ADDRESS(TIM15 + 50H);
                TIM16* = ADDRESS(40014400H);
					TIM16_CR1*   = ADDRESS(TIM16 + 0);
					TIM16_SMCR*  = ADDRESS(TIM16 + 8);
					TIM16_DIER*  = ADDRESS(TIM16 + 0CH);
					TIM16_SR*    = ADDRESS(TIM16 + 10H);
					TIM16_EGR*   = ADDRESS(TIM16 + 14H);
					TIM16_CCMR1* = ADDRESS(TIM16 + 18H);
					TIM16_CCER*  = ADDRESS(TIM16 + 20H);
					TIM16_CNT*   = ADDRESS(TIM16 + 24H);
					TIM16_PSC*   = ADDRESS(TIM16 + 28H);
					TIM16_ARR*   = ADDRESS(TIM16 + 2CH);
					TIM16_CCR1*  = ADDRESS(TIM16 + 34H);
					TIM16_OR*    = ADDRESS(TIM16 + 50H);
                SAI1* = ADDRESS(40015400H);
                DFSDM1* = ADDRESS(40016000H);
            (* AHB1 *)
                DMA1* = ADDRESS(40020000H);
				DMA2* = ADDRESS(40020400H);
                RCC* = ADDRESS(40021000H);
					RCC_CR*          = ADDRESS(RCC + 0);
					RCC_ICSCR*       = ADDRESS(RCC + 4);
					RCC_CFGR*        = ADDRESS(RCC + 8);
					RCC_PLLCFGR*     = ADDRESS(RCC + 0CH);
					RCC_PLLSAI1CFGR* = ADDRESS(RCC + 10H);
					RCC_CIER*        = ADDRESS(RCC + 18H);
                    RCC_CIFR*        = ADDRESS(RCC + 1CH);
                    RCC_CICR*        = ADDRESS(RCC + 20H);
					RCC_AHB1RSTR*    = ADDRESS(RCC + 28H);
					RCC_AHB2RSTR*    = ADDRESS(RCC + 2CH);
					RCC_AHB3RSTR*    = ADDRESS(RCC + 30H);
					RCC_APB1RSTR1*   = ADDRESS(RCC + 38H);
                    RCC_APB1RSTR2*   = ADDRESS(RCC + 3CH);
                    RCC_APB2RSTR*    = ADDRESS(RCC + 40H);
					RCC_AHB1ENR*     = ADDRESS(RCC + 48H);
                    RCC_AHB2ENR*     = ADDRESS(RCC + 4CH);
					RCC_AHB3ENR*     = ADDRESS(RCC + 50H);
					RCC_APB1ENR1*    = ADDRESS(RCC + 58H);
					RCC_APB1ENR2*    = ADDRESS(RCC + 5CH);
					RCC_APB2ENR*     = ADDRESS(RCC + 60H);
					RCC_AHB1SMENR*   = ADDRESS(RCC + 68H);
                    RCC_AHB2SMENR*   = ADDRESS(RCC + 6CH);
					RCC_AHB3SMENR*   = ADDRESS(RCC + 70H);
					RCC_APB1SMENR1*  = ADDRESS(RCC + 78H);
					RCC_APB1SMENR2*  = ADDRESS(RCC + 80H);
					RCC_CCIPR*       = ADDRESS(RCC + 88H);
					RCC_BDCR*        = ADDRESS(RCC + 90H);
					RCC_CSR*         = ADDRESS(RCC + 94H);
					RCC_CRRCR*       = ADDRESS(RCC + 98H);
					RCC_CCIPR2*      = ADDRESS(RCC + 9CH);
                FlashInterface* = ADDRESS(40022000H); (* Flash interface register *)
					FLASH_ACR*       = ADDRESS(FlashInterface + 0);
					FLASH_PDKEYR*    = ADDRESS(FlashInterface + 4);
					FLASH_KEYR*      = ADDRESS(FlashInterface + 8);
					FLASH_OPTKEYR*   = ADDRESS(FlashInterface + 0CH);
					FLASH_SR*        = ADDRESS(FlashInterface + 10H);
					FLASH_CR*        = ADDRESS(FlashInterface + 14H);
					FLASH_ECCR*      = ADDRESS(FlashInterface + 18H);
					FLASH_OPTR*      = ADDRESS(FlashInterface + 20H);
					FLASH_PCROP1SR*  = ADDRESS(FlashInterface + 24H);
					FLASH_PCROP1ER*  = ADDRESS(FlashInterface + 28H);
					FLASH_WRP1AR*    = ADDRESS(FlashInterface + 2CH);
					FLASH_WRP1BR*    = ADDRESS(FlashInterface + 30H);
                CRC* = ADDRESS(40023000H);
					CRC_DR*     = ADDRESS(CRC + 0);
					CRC_IDR*    = ADDRESS(CRC + 4);
					CRC_CR*     = ADDRESS(CRC + 8);
					CRC_INIT*   = ADDRESS(CRC + 10H);
					CRC_POL*    = ADDRESS(CRC + 14H);
                TSC* = ADDRESS(40024000H);
            (* AHB2 *)
				GPIOA* = ADDRESS(48000000H);
					GPIOA_MODER*     = ADDRESS(GPIOA + 0);
					GPIOA_OTYPER*    = ADDRESS(GPIOA + 4);
					GPIOA_OSPEEDR*   = ADDRESS(GPIOA + 8);
					GPIOA_PUPDR*     = ADDRESS(GPIOA + 0CH);
					GPIOA_IDR*       = ADDRESS(GPIOA + 10H);
					GPIOA_ODR*       = ADDRESS(GPIOA + 14H);
					GPIOA_BSRR*      = ADDRESS(GPIOA + 18H);
					GPIOA_LCKR*      = ADDRESS(GPIOA + 1CH);
					GPIOA_AFRL*      = ADDRESS(GPIOA + 20H);
					GPIOA_AFRH*      = ADDRESS(GPIOA + 24H);
                GPIOB* = ADDRESS(48000400H);
					GPIOB_MODER*     = ADDRESS(GPIOB + 0);
					GPIOB_OTYPER*    = ADDRESS(GPIOB + 4);
					GPIOB_OSPEEDR*   = ADDRESS(GPIOB + 8);
					GPIOB_PUPDR*     = ADDRESS(GPIOB + 0CH);
					GPIOB_IDR*       = ADDRESS(GPIOB + 10H);
					GPIOB_ODR*       = ADDRESS(GPIOB + 14H);
					GPIOB_BSRR*      = ADDRESS(GPIOB + 18H);
					GPIOB_LCKR*      = ADDRESS(GPIOB + 1CH);
					GPIOB_AFRL*      = ADDRESS(GPIOB + 20H);
					GPIOB_AFRH*      = ADDRESS(GPIOB + 24H);
                GPIOC* = ADDRESS(48000800H);
					GPIOC_MODER*     = ADDRESS(GPIOC + 0);
					GPIOC_OTYPER*    = ADDRESS(GPIOC + 4);
					GPIOC_OSPEEDR*   = ADDRESS(GPIOC + 8);
					GPIOC_PUPDR*     = ADDRESS(GPIOC + 0CH);
					GPIOC_IDR*       = ADDRESS(GPIOC + 10H);
					GPIOC_ODR*       = ADDRESS(GPIOC + 14H);
					GPIOC_BSRR*      = ADDRESS(GPIOC + 18H);
					GPIOC_LCKR*      = ADDRESS(GPIOC + 1CH);
					GPIOC_AFRL*      = ADDRESS(GPIOC + 20H);
					GPIOC_AFRH*      = ADDRESS(GPIOC + 24H);
                GPIOD* = ADDRESS(48000C00H);
					GPIOD_MODER*     = ADDRESS(GPIOD + 0);
					GPIOD_OTYPER*    = ADDRESS(GPIOD + 4);
					GPIOD_OSPEEDR*   = ADDRESS(GPIOD + 8);
					GPIOD_PUPDR*     = ADDRESS(GPIOD + 0CH);
					GPIOD_IDR*       = ADDRESS(GPIOD + 10H);
					GPIOD_ODR*       = ADDRESS(GPIOD + 14H);
					GPIOD_BSRR*      = ADDRESS(GPIOD + 18H);
					GPIOD_LCKR*      = ADDRESS(GPIOD + 1CH);
					GPIOD_AFRL*      = ADDRESS(GPIOD + 20H);
					GPIOD_AFRH*      = ADDRESS(GPIOD + 24H);
                GPIOE* = ADDRESS(48001000H);
					GPIOE_MODER*     = ADDRESS(GPIOE + 0);
					GPIOE_OTYPER*    = ADDRESS(GPIOE + 4);
					GPIOE_OSPEEDR*   = ADDRESS(GPIOE + 8);
					GPIOE_PUPDR*     = ADDRESS(GPIOE + 0CH);
					GPIOE_IDR*       = ADDRESS(GPIOE + 10H);
					GPIOE_ODR*       = ADDRESS(GPIOE + 14H);
					GPIOE_BSRR*      = ADDRESS(GPIOE + 18H);
					GPIOE_LCKR*      = ADDRESS(GPIOE + 1CH);
					GPIOE_AFRL*      = ADDRESS(GPIOE + 20H);
					GPIOE_AFRH*      = ADDRESS(GPIOE + 24H);
                GPIOH* = ADDRESS(48001C00H);
					GPIOH_MODER*     = ADDRESS(GPIOH + 0);
					GPIOH_OTYPER*    = ADDRESS(GPIOH + 4);
					GPIOH_OSPEEDR*   = ADDRESS(GPIOH + 8);
					GPIOH_PUPDR*     = ADDRESS(GPIOH + 0CH);
					GPIOH_IDR*       = ADDRESS(GPIOH + 10H);
					GPIOH_ODR*       = ADDRESS(GPIOH + 14H);
					GPIOH_BSRR*      = ADDRESS(GPIOH + 18H);
					GPIOH_LCKR*      = ADDRESS(GPIOH + 1CH);
					GPIOH_AFRL*      = ADDRESS(GPIOH + 20H);
					GPIOH_AFRH*      = ADDRESS(GPIOH + 24H);
                ADC* = ADDRESS(50040000H);
                AES* = ADDRESS(50060000H);
                RNG* = ADDRESS(50060800H);
                	RNG_CR*  = ADDRESS(RNG + 0);
                    RNG_SR*  = ADDRESS(RNG + 4);
                    RNG_DR*  = ADDRESS(RNG + 8);
                DBGMCU* = ADDRESS(0E0042000H);
				DBGMCU_IDCODE*   = ADDRESS(DBGMCU + 0);
				DBGMCU_CR*       = ADDRESS(DBGMCU + 4);
				DBGMCU_APB1FZ*   = ADDRESS(DBGMCU + 8);
				DBGMCU_APB2FZ*   = ADDRESS(DBGMCU + 0CH);

				(* NVIC *)
                (* interrupt sources *)
                USART1Int* = 37;
                USART2Int* = 38;
                USART3Int* = 39;
                UART4Int* = 52;

END STM32L4.
